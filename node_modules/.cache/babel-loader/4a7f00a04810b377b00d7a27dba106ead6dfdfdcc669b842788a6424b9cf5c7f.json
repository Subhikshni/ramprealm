{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 3\\\\checkmatecentral\\\\client\\\\src\\\\components\\\\chessbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBot = () => {\n  _s();\n  const [chess] = useState(new Chess());\n  const [playerColor, setPlayerColor] = useState(\"white\");\n  const [difficulty, setDifficulty] = useState(\"medium\");\n  const [fen, setFen] = useState(chess.fen());\n  const handlePlayerColorChange = e => {\n    setPlayerColor(e.target.value);\n  };\n  const handleDifficultyChange = e => {\n    setDifficulty(e.target.value);\n  };\n  const makeBotMove = () => {\n    // Implement bot move logic based on the selected difficulty\n    // For simplicity, let's make a random move for now\n    const possibleMoves = chess.moves();\n    const randomMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n    chess.move(randomMove);\n    setFen(chess.fen());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose player color:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: playerColor,\n          onChange: handlePlayerColorChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"white\",\n            children: \"White\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"black\",\n            children: \"Black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose difficulty:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: difficulty,\n          onChange: handleDifficultyChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: fen,\n      onDrop: move => {\n        // Validate player move\n        const moveResult = chess.move({\n          from: move.sourceSquare,\n          to: move.targetSquare,\n          promotion: \"q\" // promote to queen for simplicity\n        });\n\n        // If move is valid, make bot move\n        if (moveResult) {\n          setFen(chess.fen());\n          setTimeout(makeBotMove, 500); // Delay for better visualization\n        } else {\n          return \"snapback\"; // Snap back the piece if move is invalid\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBot, \"aOQP25HhuTqdKqcp4+MgBsHA32M=\");\n_c = ChessBot;\nexport default ChessBot;\nvar _c;\n$RefreshReg$(_c, \"ChessBot\");","map":{"version":3,"names":["React","useState","Chessboard","Chess","jsxDEV","_jsxDEV","ChessBot","_s","chess","playerColor","setPlayerColor","difficulty","setDifficulty","fen","setFen","handlePlayerColorChange","e","target","value","handleDifficultyChange","makeBotMove","possibleMoves","moves","randomMove","Math","floor","random","length","move","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","position","onDrop","moveResult","from","sourceSquare","to","targetSquare","promotion","setTimeout","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 3/checkmatecentral/client/src/components/chessbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport { Chess } from \"chess.js\";\r\n\r\nconst ChessBot = () => {\r\n  const [chess] = useState(new Chess());\r\n  const [playerColor, setPlayerColor] = useState(\"white\");\r\n  const [difficulty, setDifficulty] = useState(\"medium\");\r\n  const [fen, setFen] = useState(chess.fen());\r\n\r\n  const handlePlayerColorChange = (e) => {\r\n    setPlayerColor(e.target.value);\r\n  };\r\n\r\n  const handleDifficultyChange = (e) => {\r\n    setDifficulty(e.target.value);\r\n  };\r\n\r\n  const makeBotMove = () => {\r\n    // Implement bot move logic based on the selected difficulty\r\n    // For simplicity, let's make a random move for now\r\n    const possibleMoves = chess.moves();\r\n    const randomMove =\r\n      possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n    chess.move(randomMove);\r\n    setFen(chess.fen());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>\r\n          Choose player color:\r\n          <select value={playerColor} onChange={handlePlayerColorChange}>\r\n            <option value=\"white\">White</option>\r\n            <option value=\"black\">Black</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Choose difficulty:\r\n          <select value={difficulty} onChange={handleDifficultyChange}>\r\n            <option value=\"easy\">Easy</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"hard\">Hard</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <Chessboard\r\n        position={fen}\r\n        onDrop={(move) => {\r\n          // Validate player move\r\n          const moveResult = chess.move({\r\n            from: move.sourceSquare,\r\n            to: move.targetSquare,\r\n            promotion: \"q\", // promote to queen for simplicity\r\n          });\r\n\r\n          // If move is valid, make bot move\r\n          if (moveResult) {\r\n            setFen(chess.fen());\r\n            setTimeout(makeBotMove, 500); // Delay for better visualization\r\n          } else {\r\n            return \"snapback\"; // Snap back the piece if move is invalid\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}