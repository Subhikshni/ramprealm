{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 2\\\\peerhealhaven\\\\src\\\\components\\\\MoodTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar2 from \"./NavBar2\";\nimport \"../css/MoodTracker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodTracker() {\n  _s();\n  const [anger, setAnger] = useState(\"\");\n  const [sadness, setSadness] = useState(\"\");\n  const [happiness, setHappiness] = useState(\"\");\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    // Store mood tracks for the day\n    const moodTrack = {\n      date: new Date().toLocaleDateString(),\n      anger: parseInt(anger),\n      sadness: parseInt(sadness),\n      happiness: parseInt(happiness)\n    };\n\n    // You can implement logic to store the mood track data in a database or state management system\n    console.log(\"Mood tracked successfully!\", moodTrack);\n\n    // Provide advice based on mood control capability\n    provideAdvice(moodTrack);\n\n    // Reset form fields\n    setAnger(\"\");\n    setSadness(\"\");\n    setHappiness(\"\");\n  };\n\n  // Function to provide advice based on mood control capability\n  const provideAdvice = ({\n    anger,\n    sadness,\n    happiness\n  }) => {\n    let advice = \"\";\n    if (anger <= 4) {\n      advice += \"Great job controlling your anger! Keep up the good work.\\n\";\n    } else {\n      advice += \"You seem to have high levels of anger. Try practicing deep breathing exercises or meditation to manage it.\\n\";\n    }\n    if (sadness <= 4) {\n      advice += \"You are managing sadness well! Stay positive.\\n\";\n    } else {\n      advice += \"Feeling sad? Consider talking to someone you trust or engaging in activities that bring you joy.\\n\";\n    }\n    if (happiness >= 7) {\n      advice += \"You have a high level of happiness! Keep doing what makes you happy.\\n\";\n    } else {\n      advice += \"If you're struggling to find happiness, try focusing on things you're grateful for and doing activities you enjoy.\\n\";\n    }\n    if (advice === \"\") {\n      advice = \"Keep up the good work! You're doing great!\";\n    } else {\n      advice += \"Remember, it's okay to seek help if you need it.\";\n    }\n    alert(advice);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-tracker-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mood Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"anger\",\n            children: \"Anger Control (1-10):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"anger\",\n            min: \"1\",\n            max: \"10\",\n            value: anger,\n            onChange: e => setAnger(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sadness\",\n            children: \"Sadness Control (1-10):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"sadness\",\n            min: \"1\",\n            max: \"10\",\n            value: sadness,\n            onChange: e => setSadness(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"happiness\",\n            children: \"Happiness (1-10):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"happiness\",\n            min: \"1\",\n            max: \"10\",\n            value: happiness,\n            onChange: e => setHappiness(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(MoodTracker, \"QcK5yHQ2R7sRcbRLp/ItDtaGxRE=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","Navbar2","jsxDEV","_jsxDEV","MoodTracker","_s","anger","setAnger","sadness","setSadness","happiness","setHappiness","handleFormSubmit","event","preventDefault","moodTrack","date","Date","toLocaleDateString","parseInt","console","log","provideAdvice","advice","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","min","max","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 2/peerhealhaven/src/components/MoodTracker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar2 from \"./NavBar2\";\r\nimport \"../css/MoodTracker.css\";\r\n\r\nfunction MoodTracker() {\r\n  const [anger, setAnger] = useState(\"\");\r\n  const [sadness, setSadness] = useState(\"\");\r\n  const [happiness, setHappiness] = useState(\"\");\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Store mood tracks for the day\r\n    const moodTrack = {\r\n      date: new Date().toLocaleDateString(),\r\n      anger: parseInt(anger),\r\n      sadness: parseInt(sadness),\r\n      happiness: parseInt(happiness),\r\n    };\r\n\r\n    // You can implement logic to store the mood track data in a database or state management system\r\n    console.log(\"Mood tracked successfully!\", moodTrack);\r\n\r\n    // Provide advice based on mood control capability\r\n    provideAdvice(moodTrack);\r\n\r\n    // Reset form fields\r\n    setAnger(\"\");\r\n    setSadness(\"\");\r\n    setHappiness(\"\");\r\n  };\r\n\r\n  // Function to provide advice based on mood control capability\r\n  const provideAdvice = ({ anger, sadness, happiness }) => {\r\n    let advice = \"\";\r\n\r\n    if (anger <= 4) {\r\n      advice += \"Great job controlling your anger! Keep up the good work.\\n\";\r\n    } else {\r\n      advice +=\r\n        \"You seem to have high levels of anger. Try practicing deep breathing exercises or meditation to manage it.\\n\";\r\n    }\r\n\r\n    if (sadness <= 4) {\r\n      advice += \"You are managing sadness well! Stay positive.\\n\";\r\n    } else {\r\n      advice +=\r\n        \"Feeling sad? Consider talking to someone you trust or engaging in activities that bring you joy.\\n\";\r\n    }\r\n\r\n    if (happiness >= 7) {\r\n      advice +=\r\n        \"You have a high level of happiness! Keep doing what makes you happy.\\n\";\r\n    } else {\r\n      advice +=\r\n        \"If you're struggling to find happiness, try focusing on things you're grateful for and doing activities you enjoy.\\n\";\r\n    }\r\n\r\n    if (advice === \"\") {\r\n      advice = \"Keep up the good work! You're doing great!\";\r\n    } else {\r\n      advice += \"Remember, it's okay to seek help if you need it.\";\r\n    }\r\n\r\n    alert(advice);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 />\r\n      <div className=\"mood-tracker-container\">\r\n        <h2>Mood Tracker</h2>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <div>\r\n            <label htmlFor=\"anger\">Anger Control (1-10):</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"anger\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={anger}\r\n              onChange={(e) => setAnger(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"sadness\">Sadness Control (1-10):</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"sadness\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={sadness}\r\n              onChange={(e) => setSadness(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"happiness\">Happiness (1-10):</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"happiness\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={happiness}\r\n              onChange={(e) => setHappiness(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoodTracker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,SAAS,GAAG;MAChBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MACrCZ,KAAK,EAAEa,QAAQ,CAACb,KAAK,CAAC;MACtBE,OAAO,EAAEW,QAAQ,CAACX,OAAO,CAAC;MAC1BE,SAAS,EAAES,QAAQ,CAACT,SAAS;IAC/B,CAAC;;IAED;IACAU,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEN,SAAS,CAAC;;IAEpD;IACAO,aAAa,CAACP,SAAS,CAAC;;IAExB;IACAR,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;;EAED;EACA,MAAMW,aAAa,GAAGA,CAAC;IAAEhB,KAAK;IAAEE,OAAO;IAAEE;EAAU,CAAC,KAAK;IACvD,IAAIa,MAAM,GAAG,EAAE;IAEf,IAAIjB,KAAK,IAAI,CAAC,EAAE;MACdiB,MAAM,IAAI,4DAA4D;IACxE,CAAC,MAAM;MACLA,MAAM,IACJ,8GAA8G;IAClH;IAEA,IAAIf,OAAO,IAAI,CAAC,EAAE;MAChBe,MAAM,IAAI,iDAAiD;IAC7D,CAAC,MAAM;MACLA,MAAM,IACJ,oGAAoG;IACxG;IAEA,IAAIb,SAAS,IAAI,CAAC,EAAE;MAClBa,MAAM,IACJ,wEAAwE;IAC5E,CAAC,MAAM;MACLA,MAAM,IACJ,sHAAsH;IAC1H;IAEA,IAAIA,MAAM,KAAK,EAAE,EAAE;MACjBA,MAAM,GAAG,4CAA4C;IACvD,CAAC,MAAM;MACLA,MAAM,IAAI,kDAAkD;IAC9D;IAEAC,KAAK,CAACD,MAAM,CAAC;EACf,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACF,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACX1B,OAAA;MAAK2B,SAAS,EAAC,wBAAwB;MAAAL,QAAA,gBACrCtB,OAAA;QAAAsB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB1B,OAAA;QAAM4B,QAAQ,EAAEnB,gBAAiB;QAAAa,QAAA,gBAC/BtB,OAAA;UAAAsB,QAAA,gBACEtB,OAAA;YAAO6B,OAAO,EAAC,OAAO;YAAAP,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpD1B,OAAA;YACE8B,IAAI,EAAC,QAAQ;YACbC,EAAE,EAAC,OAAO;YACVC,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,IAAI;YACRC,KAAK,EAAE/B,KAAM;YACbgC,QAAQ,EAAGC,CAAC,IAAKhC,QAAQ,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC1CI,QAAQ;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1B,OAAA;UAAAsB,QAAA,gBACEtB,OAAA;YAAO6B,OAAO,EAAC,SAAS;YAAAP,QAAA,EAAC;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxD1B,OAAA;YACE8B,IAAI,EAAC,QAAQ;YACbC,EAAE,EAAC,SAAS;YACZC,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,IAAI;YACRC,KAAK,EAAE7B,OAAQ;YACf8B,QAAQ,EAAGC,CAAC,IAAK9B,UAAU,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC5CI,QAAQ;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1B,OAAA;UAAAsB,QAAA,gBACEtB,OAAA;YAAO6B,OAAO,EAAC,WAAW;YAAAP,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpD1B,OAAA;YACE8B,IAAI,EAAC,QAAQ;YACbC,EAAE,EAAC,WAAW;YACdC,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,IAAI;YACRC,KAAK,EAAE3B,SAAU;YACjB4B,QAAQ,EAAGC,CAAC,IAAK5B,YAAY,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC9CI,QAAQ;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1B,OAAA;UAAQ8B,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CA9GQD,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAgHpB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}