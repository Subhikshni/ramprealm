{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 4\\\\ramprealm\\\\client\\\\src\\\\components\\\\forum.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../css/forum.css\";\nimport NavBar2 from \"./NavBar2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forum = () => {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [newThread, setNewThread] = useState({\n    title: \"\",\n    content: \"\",\n    author: \"\"\n  });\n  const [newReply, setNewReply] = useState({\n    content: \"\"\n  });\n  const [replies, setReplies] = useState({});\n  const [username, setUsername] = useState(\"\"); // Assuming username is fetched or passed as a prop\n\n  useEffect(() => {\n    const fetchUsername = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5003/profile2/${username}`);\n        setUsername(response.data.username);\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    };\n    fetchUsername();\n  }, [username]);\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5003/threads\");\n        setThreads(response.data);\n      } catch (error) {\n        console.error(\"Error fetching threads:\", error);\n      }\n    };\n    fetchThreads();\n  }, []);\n  const fetchReplies = async threadId => {\n    try {\n      const response = await axios.get(`http://localhost:5003/threads/${threadId}/replies`);\n      const repliesWithAuthor = response.data.map(reply => ({\n        ...reply,\n        author: reply.author || username\n      }));\n      setReplies(prevReplies => ({\n        ...prevReplies,\n        [threadId]: repliesWithAuthor\n      }));\n    } catch (error) {\n      console.error(\"Error fetching replies:\", error);\n    }\n  };\n  const handleInputChange = (e, setFunction) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFunction(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmitThread = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5003/threads\", newThread);\n      console.log(response.data);\n      setNewThread({\n        title: \"\",\n        content: \"\",\n        author: \"\"\n      });\n      const fetchUpdatedThreads = await axios.get(\"http://localhost:5003/threads\");\n      setThreads(fetchUpdatedThreads.data);\n    } catch (error) {\n      console.error(\"Error creating thread:\", error);\n    }\n  };\n  const handleSubmitReply = async (e, threadId) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:5003/threads/${threadId}/replies`, {\n        ...newReply,\n        author: username\n      });\n      console.log(response.data);\n      setNewReply({\n        content: \"\"\n      });\n      fetchReplies(threadId);\n    } catch (error) {\n      console.error(\"Error creating reply:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitThread,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: newThread.title,\n        onChange: e => handleInputChange(e, setNewThread),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        value: newThread.content,\n        onChange: e => handleInputChange(e, setNewThread),\n        placeholder: \"Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        value: newThread.author,\n        onChange: e => handleInputChange(e, setNewThread),\n        placeholder: \"Author\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"threads\",\n      children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: thread.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: thread.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), \" \", thread.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Posted on:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), \" \", new Date(thread.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchReplies(thread.id),\n          children: \"View Replies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), replies[thread.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"replies\",\n          children: [replies[thread.id].map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: reply.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Author:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this), \" \", reply.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Posted on:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }, this), \" \", new Date(reply.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)]\n          }, reply.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleSubmitReply(e, thread.id),\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"content\",\n              value: newReply.content,\n              onChange: e => handleInputChange(e, setNewReply),\n              placeholder: \"Add a reply\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Forum, \"enVIAU4Jv1FRbrfeV9KTCjj7SH8=\");\n_c = Forum;\nexport default Forum;\nvar _c;\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"names":["React","useState","useEffect","axios","NavBar2","jsxDEV","_jsxDEV","Forum","_s","threads","setThreads","newThread","setNewThread","title","content","author","newReply","setNewReply","replies","setReplies","username","setUsername","fetchUsername","response","get","data","error","console","fetchThreads","fetchReplies","threadId","repliesWithAuthor","map","reply","prevReplies","handleInputChange","e","setFunction","name","value","target","prevState","handleSubmitThread","preventDefault","post","log","fetchUpdatedThreads","handleSubmitReply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","thread","Date","createdAt","toLocaleString","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 4/ramprealm/client/src/components/forum.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/forum.css\";\r\nimport NavBar2 from \"./NavBar2\";\r\n\r\nconst Forum = () => {\r\n  const [threads, setThreads] = useState([]);\r\n  const [newThread, setNewThread] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    author: \"\",\r\n  });\r\n  const [newReply, setNewReply] = useState({ content: \"\" });\r\n  const [replies, setReplies] = useState({});\r\n  const [username, setUsername] = useState(\"\"); // Assuming username is fetched or passed as a prop\r\n\r\n  useEffect(() => {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5003/profile2/${username}`\r\n        );\r\n        setUsername(response.data.username);\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUsername();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5003/threads\");\r\n        setThreads(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching threads:\", error);\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  const fetchReplies = async (threadId) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5003/threads/${threadId}/replies`\r\n      );\r\n      const repliesWithAuthor = response.data.map((reply) => ({\r\n        ...reply,\r\n        author: reply.author || username,\r\n      }));\r\n      setReplies((prevReplies) => ({\r\n        ...prevReplies,\r\n        [threadId]: repliesWithAuthor,\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching replies:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, setFunction) => {\r\n    const { name, value } = e.target;\r\n    setFunction((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmitThread = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5003/threads\",\r\n        newThread\r\n      );\r\n      console.log(response.data);\r\n      setNewThread({ title: \"\", content: \"\", author: \"\" });\r\n      const fetchUpdatedThreads = await axios.get(\r\n        \"http://localhost:5003/threads\"\r\n      );\r\n      setThreads(fetchUpdatedThreads.data);\r\n    } catch (error) {\r\n      console.error(\"Error creating thread:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitReply = async (e, threadId) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:5003/threads/${threadId}/replies`,\r\n        {\r\n          ...newReply,\r\n          author: username,\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setNewReply({ content: \"\" });\r\n      fetchReplies(threadId);\r\n    } catch (error) {\r\n      console.error(\"Error creating reply:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forum\">\r\n      <NavBar2 />\r\n      <h2>Forum</h2>\r\n      <form onSubmit={handleSubmitThread}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={newThread.title}\r\n          onChange={(e) => handleInputChange(e, setNewThread)}\r\n          placeholder=\"Title\"\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"content\"\r\n          value={newThread.content}\r\n          onChange={(e) => handleInputChange(e, setNewThread)}\r\n          placeholder=\"Content\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"author\"\r\n          value={newThread.author}\r\n          onChange={(e) => handleInputChange(e, setNewThread)}\r\n          placeholder=\"Author\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Create Thread</button>\r\n      </form>\r\n      <div className=\"threads\">\r\n        {threads.map((thread) => (\r\n          <div key={thread.id} className=\"thread\">\r\n            <h3>{thread.title}</h3>\r\n            <p>{thread.content}</p>\r\n            <p>\r\n              <strong>Author:</strong> {thread.author}\r\n            </p>\r\n            <p>\r\n              <strong>Posted on:</strong>{\" \"}\r\n              {new Date(thread.createdAt).toLocaleString()}\r\n            </p>\r\n            <button onClick={() => fetchReplies(thread.id)}>\r\n              View Replies\r\n            </button>\r\n            {replies[thread.id] && (\r\n              <div className=\"replies\">\r\n                {replies[thread.id].map((reply) => (\r\n                  <div key={reply.id} className=\"reply\">\r\n                    <p>{reply.content}</p>\r\n                    <p>\r\n                      <strong>Author:</strong> {reply.author}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Posted on:</strong>{\" \"}\r\n                      {new Date(reply.createdAt).toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n                <form onSubmit={(e) => handleSubmitReply(e, thread.id)}>\r\n                  <textarea\r\n                    name=\"content\"\r\n                    value={newReply.content}\r\n                    onChange={(e) => handleInputChange(e, setNewReply)}\r\n                    placeholder=\"Add a reply\"\r\n                    required\r\n                  />\r\n                  <button type=\"submit\">Reply</button>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forum;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}