{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 3\\\\checkmatecentral\\\\client\\\\src\\\\components\\\\chessbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ChessBot {\n  constructor() {\n    this.engineColor = \"black\";\n    this.engineLevel = 3;\n    this.engine = new Chess();\n  }\n  setEngineColor(color) {\n    this.engineColor = color;\n  }\n  setEngineLevel(level) {\n    this.engineLevel = level;\n  }\n  makeEngineMove() {\n    if (this.engine.turn() !== this.engineColor || this.engine.game_over()) {\n      return null;\n    }\n    let legalMoves = this.engine.moves();\n    let move = legalMoves[Math.floor(Math.random() * legalMoves.length)];\n    this.engine.move(move);\n    return move;\n  }\n  makeHumanMove(from, to) {\n    console.log(\"From:\", from);\n    console.log(\"To:\", to);\n    let move = null;\n    const promotionRank = this.engineColor === \"white\" ? 7 : 0;\n    const isPromotionMove = to && to[1] === promotionRank;\n    if (isPromotionMove) {\n      move = {\n        from,\n        to,\n        promotion: \"q\"\n      };\n    } else {\n      move = this.engine.move({\n        from: from,\n        to: to\n      });\n    }\n    return move;\n  }\n  handlePromotion(from, to, promotionPiece) {\n    return this.engine.move({\n      from,\n      to,\n      promotion: promotionPiece\n    });\n  }\n  getBoard() {\n    return this.engine.fen();\n  }\n  resetGame() {\n    this.engine.reset();\n  }\n}\nconst ChessBotApp = () => {\n  _s();\n  const [fen, setFen] = useState(\"start\");\n  const [gameOver, setGameOver] = useState(false);\n  const [playerColor, setPlayerColor] = useState(\"white\");\n  const chessBot = new ChessBot();\n  const handleMove = (fromSquare, toSquare) => {\n    const move = chessBot.makeHumanMove(fromSquare, toSquare);\n    if (move) {\n      const engineMove = chessBot.makeEngineMove();\n      if (engineMove) {\n        setFen(chessBot.getBoard());\n        setGameOver(chessBot.engine.game_over());\n      }\n    }\n  };\n  const chooseColor = color => {\n    setPlayerColor(color);\n    chessBot.setEngineColor(color === \"white\" ? \"black\" : \"white\");\n  };\n  const newGame = () => {\n    chessBot.resetGame();\n    setFen(\"start\");\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      width: 400,\n      position: fen,\n      onDrop: ({\n        sourceSquare,\n        targetSquare\n      }) => handleMove(sourceSquare, targetSquare),\n      orientation: playerColor,\n      dropOffBoard: \"snapback\",\n      allowDrag: () => !gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => chooseColor(\"white\"),\n        children: \"Play as White\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => chooseColor(\"black\"),\n        children: \"Play as Black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBotApp, \"qfNSu4qRnb3dBv/sg1K3PfU2oG8=\");\n_c = ChessBotApp;\nReactDOM.render( /*#__PURE__*/_jsxDEV(ChessBotApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 112,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\nvar _c;\n$RefreshReg$(_c, \"ChessBotApp\");","map":{"version":3,"names":["React","useState","ReactDOM","Chessboard","Chess","jsxDEV","_jsxDEV","ChessBot","constructor","engineColor","engineLevel","engine","setEngineColor","color","setEngineLevel","level","makeEngineMove","turn","game_over","legalMoves","moves","move","Math","floor","random","length","makeHumanMove","from","to","console","log","promotionRank","isPromotionMove","promotion","handlePromotion","promotionPiece","getBoard","fen","resetGame","reset","ChessBotApp","_s","setFen","gameOver","setGameOver","playerColor","setPlayerColor","chessBot","handleMove","fromSquare","toSquare","engineMove","chooseColor","newGame","children","width","position","onDrop","sourceSquare","targetSquare","orientation","dropOffBoard","allowDrag","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","render","document","getElementById","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 3/checkmatecentral/client/src/components/chessbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport { Chess } from \"chess.js\";\r\n\r\nclass ChessBot {\r\n  constructor() {\r\n    this.engineColor = \"black\";\r\n    this.engineLevel = 3;\r\n    this.engine = new Chess();\r\n  }\r\n\r\n  setEngineColor(color) {\r\n    this.engineColor = color;\r\n  }\r\n\r\n  setEngineLevel(level) {\r\n    this.engineLevel = level;\r\n  }\r\n\r\n  makeEngineMove() {\r\n    if (this.engine.turn() !== this.engineColor || this.engine.game_over()) {\r\n      return null;\r\n    }\r\n\r\n    let legalMoves = this.engine.moves();\r\n    let move = legalMoves[Math.floor(Math.random() * legalMoves.length)];\r\n    this.engine.move(move);\r\n    return move;\r\n  }\r\n\r\n  makeHumanMove(from, to) {\r\n    console.log(\"From:\", from);\r\n    console.log(\"To:\", to);\r\n\r\n    let move = null;\r\n    const promotionRank = this.engineColor === \"white\" ? 7 : 0;\r\n\r\n    const isPromotionMove = to && to[1] === promotionRank;\r\n\r\n    if (isPromotionMove) {\r\n      move = { from, to, promotion: \"q\" };\r\n    } else {\r\n      move = this.engine.move({ from: from, to: to });\r\n    }\r\n\r\n    return move;\r\n  }\r\n\r\n  handlePromotion(from, to, promotionPiece) {\r\n    return this.engine.move({ from, to, promotion: promotionPiece });\r\n  }\r\n\r\n  getBoard() {\r\n    return this.engine.fen();\r\n  }\r\n\r\n  resetGame() {\r\n    this.engine.reset();\r\n  }\r\n}\r\n\r\nconst ChessBotApp = () => {\r\n  const [fen, setFen] = useState(\"start\");\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [playerColor, setPlayerColor] = useState(\"white\");\r\n  const chessBot = new ChessBot();\r\n\r\n  const handleMove = (fromSquare, toSquare) => {\r\n    const move = chessBot.makeHumanMove(fromSquare, toSquare);\r\n    if (move) {\r\n      const engineMove = chessBot.makeEngineMove();\r\n      if (engineMove) {\r\n        setFen(chessBot.getBoard());\r\n        setGameOver(chessBot.engine.game_over());\r\n      }\r\n    }\r\n  };\r\n\r\n  const chooseColor = (color) => {\r\n    setPlayerColor(color);\r\n    chessBot.setEngineColor(color === \"white\" ? \"black\" : \"white\");\r\n  };\r\n\r\n  const newGame = () => {\r\n    chessBot.resetGame();\r\n    setFen(\"start\");\r\n    setGameOver(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chessboard\r\n        width={400}\r\n        position={fen}\r\n        onDrop={({ sourceSquare, targetSquare }) =>\r\n          handleMove(sourceSquare, targetSquare)\r\n        }\r\n        orientation={playerColor}\r\n        dropOffBoard=\"snapback\"\r\n        allowDrag={() => !gameOver}\r\n      />\r\n      <div>\r\n        <button onClick={() => chooseColor(\"white\")}>Play as White</button>\r\n        <button onClick={() => chooseColor(\"black\")}>Play as Black</button>\r\n        <button onClick={newGame}>New Game</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<ChessBotApp />, document.getElementById(\"root\"));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}