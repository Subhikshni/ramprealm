{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 3\\\\checkmatecentral\\\\client\\\\src\\\\components\\\\chessbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBot = () => {\n  _s();\n  const [chess] = useState(new Chess());\n  const [fen, setFen] = useState(chess.fen());\n  const [moveHistory, setMoveHistory] = useState([]);\n  const makeBotMove = () => {\n    // Implement bot move logic\n    const move = getRandomMove(chess);\n    chess.move(move);\n    setFen(chess.fen());\n    updateMoveHistory();\n  };\n  const getRandomMove = chess => {\n    const possibleMoves = chess.moves();\n    return possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n  };\n  const handleDrop = (sourceSquare, targetSquare) => {\n    const move = {\n      from: sourceSquare,\n      to: targetSquare\n    };\n    const piece = chess.get(sourceSquare);\n\n    // Check if the moved piece is a pawn and reached the promotion square\n    if (piece.type === \"p\" && (targetSquare[1] === \"8\" || targetSquare[1] === \"1\")) {\n      // For simplicity, promote to queen by default\n      move.promotion = \"q\";\n    }\n    const moveResult = chess.move(move);\n    if (moveResult) {\n      setFen(chess.fen());\n      updateMoveHistory();\n      setTimeout(makeBotMove, 500);\n    } else {\n      alert(\"Invalid move\");\n    }\n  };\n  const updateMoveHistory = () => {\n    const history = chess.history({\n      verbose: true\n    });\n    setMoveHistory(history);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: fen,\n        onDrop: (source, target) => handleDrop(source, target)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"move-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Move History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [index % 2 === 0 ? \"White\" : \"Black\", \": \", move.san]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBot, \"H6YNS6sKVtmmDZbdSJrfXL4q8ns=\");\n_c = ChessBot;\nexport default ChessBot;\nvar _c;\n$RefreshReg$(_c, \"ChessBot\");","map":{"version":3,"names":["React","useState","Chessboard","Chess","jsxDEV","_jsxDEV","ChessBot","_s","chess","fen","setFen","moveHistory","setMoveHistory","makeBotMove","move","getRandomMove","updateMoveHistory","possibleMoves","moves","Math","floor","random","length","handleDrop","sourceSquare","targetSquare","from","to","piece","get","type","promotion","moveResult","setTimeout","alert","history","verbose","children","className","position","onDrop","source","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","san","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 3/checkmatecentral/client/src/components/chessbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport { Chess } from \"chess.js\";\r\n\r\nconst ChessBot = () => {\r\n  const [chess] = useState(new Chess());\r\n  const [fen, setFen] = useState(chess.fen());\r\n  const [moveHistory, setMoveHistory] = useState([]);\r\n\r\n  const makeBotMove = () => {\r\n    // Implement bot move logic\r\n    const move = getRandomMove(chess);\r\n    chess.move(move);\r\n    setFen(chess.fen());\r\n    updateMoveHistory();\r\n  };\r\n\r\n  const getRandomMove = (chess) => {\r\n    const possibleMoves = chess.moves();\r\n    return possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n  };\r\n\r\n  const handleDrop = (sourceSquare, targetSquare) => {\r\n    const move = {\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n    };\r\n\r\n    const piece = chess.get(sourceSquare);\r\n\r\n    // Check if the moved piece is a pawn and reached the promotion square\r\n    if (\r\n      piece.type === \"p\" &&\r\n      (targetSquare[1] === \"8\" || targetSquare[1] === \"1\")\r\n    ) {\r\n      // For simplicity, promote to queen by default\r\n      move.promotion = \"q\";\r\n    }\r\n\r\n    const moveResult = chess.move(move);\r\n\r\n    if (moveResult) {\r\n      setFen(chess.fen());\r\n      updateMoveHistory();\r\n      setTimeout(makeBotMove, 500);\r\n    } else {\r\n      alert(\"Invalid move\");\r\n    }\r\n  };\r\n\r\n  const updateMoveHistory = () => {\r\n    const history = chess.history({ verbose: true });\r\n    setMoveHistory(history);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board-container\">\r\n        <Chessboard\r\n          position={fen}\r\n          onDrop={(source, target) => handleDrop(source, target)}\r\n        />\r\n      </div>\r\n      <div className=\"move-history\">\r\n        <h3>Move History</h3>\r\n        <ul>\r\n          {moveHistory.map((move, index) => (\r\n            <li key={index}>\r\n              {index % 2 === 0 ? \"White\" : \"Black\"}: {move.san}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}