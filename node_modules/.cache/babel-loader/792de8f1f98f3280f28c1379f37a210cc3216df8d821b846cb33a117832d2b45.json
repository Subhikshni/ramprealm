{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 3\\\\checkmatecentral\\\\client\\\\src\\\\components\\\\learn\\\\beginner.js\";\nimport React from \"react\";\nimport NavBar2 from \"../NavBar2.js\";\nimport Chessboard from \"chessboardjsx\"; // Importing Chessboard from chessboardjsx\nimport { Chess } from \"chess.js\"; // Importing Chess from chess.js\nimport \"./beginner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Beginner = () => {\n  // Create a new instance of Chess\n  const chess = new Chess();\n\n  // Get FEN notation for the starting position\n  const fen = chess.fen();\n\n  // Parse FEN notation to get positions of pieces\n  const parsedFen = fen.split(\" \")[0];\n\n  // Define piece images\n  const pieceImages = {\n    p: \"/images/black_pawn.png\",\n    r: \"/images/black_rook.png\",\n    n: \"/images/black_knight.png\",\n    b: \"/images/black_bishop.png\",\n    q: \"/images/black_queen.png\",\n    k: \"/images/black_king.png\",\n    P: \"/images/white_pawn.png\",\n    R: \"/images/white_rook.png\",\n    N: \"/images/white_knight.png\",\n    B: \"/images/white_bishop.png\",\n    Q: \"/images/white_queen.png\",\n    K: \"/images/white_king.png\"\n  };\n\n  // Map the positions of the pieces to their respective images\n  const pieceElements = parsedFen.split(\"/\").map((row, rowIndex) => row.split(\"\").map((char, colIndex) => {\n    if (!isNaN(char)) {\n      // if char is a number (representing empty squares)\n      return null;\n    } else {\n      const key = `${rowIndex}${colIndex}`;\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pieceImages[char],\n        alt: char,\n        className: \"piece\"\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"beginner-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Beginner Module\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the Beginner Module!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chess Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The chessboard consists of 64 squares arranged in an 8x8 grid. It is divided into light and dark squares. The chessboard is essential for playing the game of chess and is where the pieces are placed and moved during the game.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chessboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n          position: \"start\",\n          orientation: \"white\",\n          width: 400 // Adjust as needed\n          ,\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pieces-container\",\n          children: pieceElements.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: row\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chess Pieces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chess is played with six different types of pieces: the King, Queen, Rook, Bishop, Knight, and Pawn. Each piece moves in a unique way:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/king.png\",\n          alt: \"King\",\n          className: \"piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/queen.png\",\n          alt: \"Queen\",\n          className: \"piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/rook.png\",\n          alt: \"Rook\",\n          className: \"piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/bishop.png\",\n          alt: \"Bishop\",\n          className: \"piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/knight.png\",\n          alt: \"Knight\",\n          className: \"piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/pawn.png\",\n          alt: \"Pawn\",\n          className: \"piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Easy Opening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"As a beginner, it's important to focus on developing your pieces and controlling the center of the board. One easy opening strategy is the\", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Italian Game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Move the pawn in front of your King two squares forward to control the center (e4).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Develop your knight to f3, supporting the center pawn and preparing for future development.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Develop your bishop to c4, putting pressure on the vulnerable f7 square.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Castle kingside to protect your King and connect your rooks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This simple opening focuses on controlling the center, developing your pieces, and preparing for a strong midgame position.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = Beginner;\nexport default Beginner;\nvar _c;\n$RefreshReg$(_c, \"Beginner\");","map":{"version":3,"names":["React","NavBar2","Chessboard","Chess","jsxDEV","_jsxDEV","Beginner","chess","fen","parsedFen","split","pieceImages","p","r","n","b","q","k","P","R","N","B","Q","K","pieceElements","map","row","rowIndex","char","colIndex","isNaN","key","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","children","position","orientation","width","draggable","index","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 3/checkmatecentral/client/src/components/learn/beginner.js"],"sourcesContent":["import React from \"react\";\r\nimport NavBar2 from \"../NavBar2.js\";\r\nimport Chessboard from \"chessboardjsx\"; // Importing Chessboard from chessboardjsx\r\nimport { Chess } from \"chess.js\"; // Importing Chess from chess.js\r\nimport \"./beginner.css\";\r\n\r\nconst Beginner = () => {\r\n  // Create a new instance of Chess\r\n  const chess = new Chess();\r\n\r\n  // Get FEN notation for the starting position\r\n  const fen = chess.fen();\r\n\r\n  // Parse FEN notation to get positions of pieces\r\n  const parsedFen = fen.split(\" \")[0];\r\n\r\n  // Define piece images\r\n  const pieceImages = {\r\n    p: \"/images/black_pawn.png\",\r\n    r: \"/images/black_rook.png\",\r\n    n: \"/images/black_knight.png\",\r\n    b: \"/images/black_bishop.png\",\r\n    q: \"/images/black_queen.png\",\r\n    k: \"/images/black_king.png\",\r\n    P: \"/images/white_pawn.png\",\r\n    R: \"/images/white_rook.png\",\r\n    N: \"/images/white_knight.png\",\r\n    B: \"/images/white_bishop.png\",\r\n    Q: \"/images/white_queen.png\",\r\n    K: \"/images/white_king.png\",\r\n  };\r\n\r\n  // Map the positions of the pieces to their respective images\r\n  const pieceElements = parsedFen.split(\"/\").map((row, rowIndex) =>\r\n    row.split(\"\").map((char, colIndex) => {\r\n      if (!isNaN(char)) {\r\n        // if char is a number (representing empty squares)\r\n        return null;\r\n      } else {\r\n        const key = `${rowIndex}${colIndex}`;\r\n        return (\r\n          <img src={pieceImages[char]} alt={char} className=\"piece\" key={key} />\r\n        );\r\n      }\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div className=\"beginner-container\">\r\n      <NavBar2 />\r\n      <h2>Beginner Module</h2>\r\n      <p>Welcome to the Beginner Module!</p>\r\n\r\n      <section className=\"section\">\r\n        <h3>Chess Board</h3>\r\n        <p>\r\n          The chessboard consists of 64 squares arranged in an 8x8 grid. It is\r\n          divided into light and dark squares. The chessboard is essential for\r\n          playing the game of chess and is where the pieces are placed and moved\r\n          during the game.\r\n        </p>\r\n        {/* Render a blank chessboard */}\r\n        <div className=\"chessboard-container\">\r\n          <Chessboard\r\n            position=\"start\"\r\n            orientation=\"white\"\r\n            width={400} // Adjust as needed\r\n            draggable={false}\r\n          />\r\n          {/* Render chess pieces */}\r\n          <div className=\"pieces-container\">\r\n            {pieceElements.map((row, index) => (\r\n              <div className=\"row\" key={index}>\r\n                {row}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <h3>Chess Pieces</h3>\r\n        <p>\r\n          Chess is played with six different types of pieces: the King, Queen,\r\n          Rook, Bishop, Knight, and Pawn. Each piece moves in a unique way:\r\n        </p>\r\n        {/* Add images of chess pieces */}\r\n        <div className=\"image-container\">\r\n          <img src=\"/images/king.png\" alt=\"King\" className=\"piece\" />\r\n          <img src=\"/images/queen.png\" alt=\"Queen\" className=\"piece\" />\r\n          <img src=\"/images/rook.png\" alt=\"Rook\" className=\"piece\" />\r\n          <img src=\"/images/bishop.png\" alt=\"Bishop\" className=\"piece\" />\r\n          <img src=\"/images/knight.png\" alt=\"Knight\" className=\"piece\" />\r\n          <img src=\"/images/pawn.png\" alt=\"Pawn\" className=\"piece\" />\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <h3>Easy Opening</h3>\r\n        <p>\r\n          As a beginner, it's important to focus on developing your pieces and\r\n          controlling the center of the board. One easy opening strategy is the\r\n          <em>Italian Game:</em>\r\n        </p>\r\n        <ol>\r\n          <li>\r\n            Move the pawn in front of your King two squares forward to control\r\n            the center (e4).\r\n          </li>\r\n          <li>\r\n            Develop your knight to f3, supporting the center pawn and preparing\r\n            for future development.\r\n          </li>\r\n          <li>\r\n            Develop your bishop to c4, putting pressure on the vulnerable f7\r\n            square.\r\n          </li>\r\n          <li>Castle kingside to protect your King and connect your rooks.</li>\r\n        </ol>\r\n        <p>\r\n          This simple opening focuses on controlling the center, developing your\r\n          pieces, and preparing for a strong midgame position.\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Beginner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}