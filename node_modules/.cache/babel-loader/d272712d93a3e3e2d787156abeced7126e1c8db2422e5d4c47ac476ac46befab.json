{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 2\\\\peerhealhaven\\\\src\\\\components\\\\MoodTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodTracker = () => {\n  _s();\n  // Define initial data structure for mood ratings\n  const initialMoodData = [{\n    date: \"2024-05-17\",\n    emotions: {\n      Happy: null,\n      Sad: null,\n      Angry: null,\n      Excited: null\n    }\n  }, {\n    date: \"2024-05-18\",\n    emotions: {\n      Happy: null,\n      Sad: null,\n      Angry: null,\n      Excited: null\n    }\n  }\n  // Add more dates as needed\n  ];\n\n  // State to manage mood data\n  const [moodData, setMoodData] = useState(initialMoodData);\n\n  // Function to handle mood rating\n  const handleMoodRating = (date, emotion, rating) => {\n    // Update the mood data with the new rating\n    const updatedMoodData = moodData.map(entry => {\n      if (entry.date === date) {\n        return {\n          ...entry,\n          emotions: {\n            ...entry.emotions,\n            [emotion]: rating\n          }\n        };\n      }\n      return entry;\n    });\n    setMoodData(updatedMoodData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mood Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Emotion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), moodData.map(entry => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: entry.date\n          }, entry.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(moodData[0].emotions).map(emotion => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: emotion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), moodData.map(entry => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMoodRating(entry.date, emotion, 10),\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, `${entry.date}-${emotion}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))]\n        }, emotion, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodTracker, \"o1/MYItaagsbh6djPt3sd3empLE=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MoodTracker","_s","initialMoodData","date","emotions","Happy","Sad","Angry","Excited","moodData","setMoodData","handleMoodRating","emotion","rating","updatedMoodData","map","entry","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","onClick","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 2/peerhealhaven/src/components/MoodTracker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst MoodTracker = () => {\r\n  // Define initial data structure for mood ratings\r\n  const initialMoodData = [\r\n    {\r\n      date: \"2024-05-17\",\r\n      emotions: { Happy: null, Sad: null, Angry: null, Excited: null },\r\n    },\r\n    {\r\n      date: \"2024-05-18\",\r\n      emotions: { Happy: null, Sad: null, Angry: null, Excited: null },\r\n    },\r\n    // Add more dates as needed\r\n  ];\r\n\r\n  // State to manage mood data\r\n  const [moodData, setMoodData] = useState(initialMoodData);\r\n\r\n  // Function to handle mood rating\r\n  const handleMoodRating = (date, emotion, rating) => {\r\n    // Update the mood data with the new rating\r\n    const updatedMoodData = moodData.map((entry) => {\r\n      if (entry.date === date) {\r\n        return {\r\n          ...entry,\r\n          emotions: {\r\n            ...entry.emotions,\r\n            [emotion]: rating,\r\n          },\r\n        };\r\n      }\r\n      return entry;\r\n    });\r\n    setMoodData(updatedMoodData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Mood Tracker</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Emotion</th>\r\n            {moodData.map((entry) => (\r\n              <th key={entry.date}>{entry.date}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(moodData[0].emotions).map((emotion) => (\r\n            <tr key={emotion}>\r\n              <td>{emotion}</td>\r\n              {moodData.map((entry) => (\r\n                <td key={`${entry.date}-${emotion}`}>\r\n                  <button\r\n                    onClick={() => handleMoodRating(entry.date, emotion, 10)}\r\n                  >\r\n                    10\r\n                  </button>\r\n                  {/* Add more rating buttons or input fields as needed */}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoodTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}