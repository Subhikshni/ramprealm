{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 2\\\\peerhealhaven\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/chatbot.css\";\nimport NavBar2 from \"./NavBar2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      sender: \"user\",\n      text: input\n    }]);\n    handleChatbotResponse(input);\n    setInput(\"\");\n  };\n  const handleChatbotResponse = input => {\n    const responses = [{\n      keywords: [\"hello\", \"hi\"],\n      response: \"Hi there!\"\n    }, {\n      keywords: [\"how are you\", \"how are you?\"],\n      response: \"I am just a chatbot.\"\n    }, {\n      keywords: [\"name\"],\n      response: \"I am your personalized chatbot!\"\n    }\n    // Add more keyword-response pairs here\n    ];\n    let response = \"I'm sorry, I didn't understand that.\";\n    for (let i = 0; i < responses.length; i++) {\n      for (let j = 0; j < responses[i].keywords.length; j++) {\n        if (input.toLowerCase().includes(responses[i].keywords[j])) {\n          response = responses[i].response;\n          break;\n        }\n      }\n      if (response !== \"I'm sorry, I didn't understand that.\") {\n        break;\n      }\n    }\n    setMessages(prevMessages => [...prevMessages, {\n      sender: \"chatbot\",\n      text: response\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: input,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","NavBar2","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleInputChange","e","target","value","handleSendMessage","trim","sender","text","handleChatbotResponse","responses","keywords","response","i","length","j","toLowerCase","includes","prevMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","message","index","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 2/peerhealhaven/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/chatbot.css\";\r\nimport NavBar2 from \"./NavBar2\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n    setMessages([...messages, { sender: \"user\", text: input }]);\r\n    handleChatbotResponse(input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleChatbotResponse = (input) => {\r\n    const responses = [\r\n      { keywords: [\"hello\", \"hi\"], response: \"Hi there!\" },\r\n      {\r\n        keywords: [\"how are you\", \"how are you?\"],\r\n        response: \"I am just a chatbot.\",\r\n      },\r\n      { keywords: [\"name\"], response: \"I am your personalized chatbot!\" },\r\n      // Add more keyword-response pairs here\r\n    ];\r\n\r\n    let response = \"I'm sorry, I didn't understand that.\";\r\n\r\n    for (let i = 0; i < responses.length; i++) {\r\n      for (let j = 0; j < responses[i].keywords.length; j++) {\r\n        if (input.toLowerCase().includes(responses[i].keywords[j])) {\r\n          response = responses[i].response;\r\n          break;\r\n        }\r\n      }\r\n      if (response !== \"I'm sorry, I didn't understand that.\") {\r\n        break;\r\n      }\r\n    }\r\n\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { sender: \"chatbot\", text: response },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar2 />\r\n      <div className=\"chatbot-container\">\r\n        <div className=\"chatbot-messages\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={`message ${message.sender}`}>\r\n              {message.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chatbot-input\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type a message...\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}