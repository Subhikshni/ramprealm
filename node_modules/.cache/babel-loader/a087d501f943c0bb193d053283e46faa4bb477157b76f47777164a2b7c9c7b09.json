{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 3\\\\checkmatecentral\\\\client\\\\src\\\\components\\\\chessbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Chess } from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\nimport \"../css/chessbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBot = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [playerColor, setPlayerColor] = useState(\"w\"); // Default to white\n  const [promotionMove, setPromotionMove] = useState(null);\n  const [showPromotionModal, setShowPromotionModal] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  useEffect(() => {\n    console.log(\"Game instance:\", game);\n    console.log(\"Available methods:\", Object.keys(game));\n  }, [game]);\n  const isGameOver = useCallback(() => {\n    return game.isCheckmate() || game.isStalemate() || game.isInsufficientMaterial() || game.isDraw() || game.isThreefoldRepetition();\n  }, [game]);\n  const makeBotMove = useCallback(() => {\n    if (isGameOver()) return;\n    if (game.turn() !== playerColor) {\n      const moves = game.moves();\n      const move = moves[Math.floor(Math.random() * moves.length)];\n      game.move(move);\n      setFen(game.fen());\n      updateMoveHistory(move);\n    }\n  }, [game, isGameOver, playerColor]);\n  useEffect(() => {\n    if (game.turn() !== playerColor && !isGameOver()) {\n      setTimeout(makeBotMove, 500);\n    }\n  }, [game, makeBotMove, isGameOver, playerColor]);\n  const handlePromotion = promotion => {\n    const move = promotionMove;\n    move.promotion = promotion;\n    game.move(move);\n    setFen(game.fen());\n    setShowPromotionModal(false);\n    setPromotionMove(null);\n    updateMoveHistory(move);\n    setTimeout(makeBotMove, 500);\n  };\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    if (game.turn() !== playerColor) return;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // Default promotion, will be overridden by modal\n    });\n    if (move === null) return;\n    if (targetSquare[1] === \"8\" && sourceSquare[1] === \"7\" || targetSquare[1] === \"1\" && sourceSquare[1] === \"2\") {\n      game.undo();\n      setPromotionMove({\n        from: sourceSquare,\n        to: targetSquare\n      });\n      setShowPromotionModal(true);\n    } else {\n      setFen(game.fen());\n      updateMoveHistory(move);\n      setTimeout(makeBotMove, 500);\n    }\n  };\n  const togglePlayerColor = () => {\n    setPlayerColor(playerColor === \"w\" ? \"b\" : \"w\");\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setMoveHistory([]);\n  };\n  const updateMoveHistory = move => {\n    setMoveHistory(prevHistory => [...prevHistory, move]);\n  };\n  const boardStyle = {\n    borderRadius: \"5px\",\n    boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n    lightSquareStyle: {\n      backgroundColor: \"#5dc6c1\"\n    },\n    // Light teal\n    darkSquareStyle: {\n      backgroundColor: \"#3f8882\"\n    } // Dark teal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chess Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayerColor,\n      children: [\"Play as \", playerColor === \"w\" ? \"Black\" : \"White\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      className: \"chessboard-container\",\n      position: fen,\n      onDrop: onDrop,\n      transitionDuration: 300,\n      orientation: playerColor === \"w\" ? \"white\" : \"black\",\n      boardStyle: boardStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"move-history-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Move History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: move\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), showPromotionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Choose promotion piece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotion(\"q\"),\n        children: \"Queen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotion(\"r\"),\n        children: \"Rook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotion(\"b\"),\n        children: \"Bishop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotion(\"n\"),\n        children: \"Knight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBot, \"CnhZzClnSJU/Egqy1F8/VlDwvtU=\");\n_c = ChessBot;\nexport default ChessBot;\nvar _c;\n$RefreshReg$(_c, \"ChessBot\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Chess","Chessboard","jsxDEV","_jsxDEV","ChessBot","_s","game","setGame","fen","setFen","playerColor","setPlayerColor","promotionMove","setPromotionMove","showPromotionModal","setShowPromotionModal","moveHistory","setMoveHistory","console","log","Object","keys","isGameOver","isCheckmate","isStalemate","isInsufficientMaterial","isDraw","isThreefoldRepetition","makeBotMove","turn","moves","move","Math","floor","random","length","updateMoveHistory","setTimeout","handlePromotion","promotion","onDrop","sourceSquare","targetSquare","from","to","undo","togglePlayerColor","newGame","prevHistory","boardStyle","borderRadius","boxShadow","lightSquareStyle","backgroundColor","darkSquareStyle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","position","transitionDuration","orientation","map","index","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 3/checkmatecentral/client/src/components/chessbot.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Chess } from \"chess.js\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport \"../css/chessbot.css\";\r\n\r\nconst ChessBot = () => {\r\n  const [game, setGame] = useState(new Chess());\r\n  const [fen, setFen] = useState(game.fen());\r\n  const [playerColor, setPlayerColor] = useState(\"w\"); // Default to white\r\n  const [promotionMove, setPromotionMove] = useState(null);\r\n  const [showPromotionModal, setShowPromotionModal] = useState(false);\r\n  const [moveHistory, setMoveHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Game instance:\", game);\r\n    console.log(\"Available methods:\", Object.keys(game));\r\n  }, [game]);\r\n\r\n  const isGameOver = useCallback(() => {\r\n    return (\r\n      game.isCheckmate() ||\r\n      game.isStalemate() ||\r\n      game.isInsufficientMaterial() ||\r\n      game.isDraw() ||\r\n      game.isThreefoldRepetition()\r\n    );\r\n  }, [game]);\r\n\r\n  const makeBotMove = useCallback(() => {\r\n    if (isGameOver()) return;\r\n    if (game.turn() !== playerColor) {\r\n      const moves = game.moves();\r\n      const move = moves[Math.floor(Math.random() * moves.length)];\r\n      game.move(move);\r\n      setFen(game.fen());\r\n      updateMoveHistory(move);\r\n    }\r\n  }, [game, isGameOver, playerColor]);\r\n\r\n  useEffect(() => {\r\n    if (game.turn() !== playerColor && !isGameOver()) {\r\n      setTimeout(makeBotMove, 500);\r\n    }\r\n  }, [game, makeBotMove, isGameOver, playerColor]);\r\n\r\n  const handlePromotion = (promotion) => {\r\n    const move = promotionMove;\r\n    move.promotion = promotion;\r\n    game.move(move);\r\n    setFen(game.fen());\r\n    setShowPromotionModal(false);\r\n    setPromotionMove(null);\r\n    updateMoveHistory(move);\r\n    setTimeout(makeBotMove, 500);\r\n  };\r\n\r\n  const onDrop = ({ sourceSquare, targetSquare }) => {\r\n    if (game.turn() !== playerColor) return;\r\n\r\n    const move = game.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // Default promotion, will be overridden by modal\r\n    });\r\n\r\n    if (move === null) return;\r\n\r\n    if (\r\n      (targetSquare[1] === \"8\" && sourceSquare[1] === \"7\") ||\r\n      (targetSquare[1] === \"1\" && sourceSquare[1] === \"2\")\r\n    ) {\r\n      game.undo();\r\n      setPromotionMove({ from: sourceSquare, to: targetSquare });\r\n      setShowPromotionModal(true);\r\n    } else {\r\n      setFen(game.fen());\r\n      updateMoveHistory(move);\r\n      setTimeout(makeBotMove, 500);\r\n    }\r\n  };\r\n\r\n  const togglePlayerColor = () => {\r\n    setPlayerColor(playerColor === \"w\" ? \"b\" : \"w\");\r\n    const newGame = new Chess();\r\n    setGame(newGame);\r\n    setFen(newGame.fen());\r\n    setMoveHistory([]);\r\n  };\r\n\r\n  const updateMoveHistory = (move) => {\r\n    setMoveHistory((prevHistory) => [...prevHistory, move]);\r\n  };\r\n\r\n  const boardStyle = {\r\n    borderRadius: \"5px\",\r\n    boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n    lightSquareStyle: { backgroundColor: \"#5dc6c1\" }, // Light teal\r\n    darkSquareStyle: { backgroundColor: \"#3f8882\" }, // Dark teal\r\n  };\r\n\r\n  return (\r\n    <div className=\"chess-container\">\r\n      <h2>Chess Bot</h2>\r\n      <button onClick={togglePlayerColor}>\r\n        Play as {playerColor === \"w\" ? \"Black\" : \"White\"}\r\n      </button>\r\n      <Chessboard\r\n        className=\"chessboard-container\"\r\n        position={fen}\r\n        onDrop={onDrop}\r\n        transitionDuration={300}\r\n        orientation={playerColor === \"w\" ? \"white\" : \"black\"}\r\n        boardStyle={boardStyle}\r\n      />\r\n      <div className=\"move-history-container\">\r\n        <h3>Move History</h3>\r\n        <ul>\r\n          {moveHistory.map((move, index) => (\r\n            <li key={index}>{move}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {showPromotionModal && (\r\n        <div className=\"modal\">\r\n          <h3>Choose promotion piece</h3>\r\n          <button onClick={() => handlePromotion(\"q\")}>Queen</button>\r\n          <button onClick={() => handlePromotion(\"r\")}>Rook</button>\r\n          <button onClick={() => handlePromotion(\"b\")}>Bishop</button>\r\n          <button onClick={() => handlePromotion(\"n\")}>Knight</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}