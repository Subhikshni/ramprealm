{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 4\\\\ramprealm\\\\client\\\\src\\\\components\\\\forum.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"../css/forum.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forum = () => {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [newThreadTitle, setNewThreadTitle] = useState(\"\");\n  const [newThreadContent, setNewThreadContent] = useState(\"\");\n  const username = localStorage.getItem(\"username\");\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5003/threads\");\n        setThreads(response.data);\n      } catch (error) {\n        console.error(\"Error fetching threads:\", error);\n      }\n    };\n    fetchThreads();\n  }, []);\n  const handleCreateThread = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5003/threads\", {\n        title: newThreadTitle,\n        content: newThreadContent,\n        author: username\n      });\n      setThreads([...threads, response.data]);\n      setNewThreadTitle(\"\");\n      setNewThreadContent(\"\");\n    } catch (error) {\n      console.error(\"Error creating thread:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-thread\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newThreadTitle,\n        onChange: e => setNewThreadTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: newThreadContent,\n        onChange: e => setNewThreadContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateThread,\n        children: \"Create Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"threads-list\",\n      children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/forum/${thread.id}`,\n            children: thread.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", thread.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Replies: \", thread.replies]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Updated: \", thread.lastUpdated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Forum, \"cFCPF2eWK9NkRc/wIegxZ074de4=\");\n_c = Forum;\nexport const ThreadDetail = () => {\n  _s2();\n  const {\n    threadId\n  } = useParams();\n  const [thread, setThread] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [newReplyContent, setNewReplyContent] = useState(\"\");\n  const username = localStorage.getItem(\"username\");\n  useEffect(() => {\n    const fetchThread = async () => {\n      try {\n        const threadResponse = await axios.get(`http://localhost:5003/threads/${threadId}`);\n        setThread(threadResponse.data);\n        const repliesResponse = await axios.get(`http://localhost:5003/threads/${threadId}/replies`);\n        setReplies(repliesResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching thread:\", error);\n      }\n    };\n    fetchThread();\n  }, [threadId]);\n  const handleAddReply = async () => {\n    try {\n      await axios.post(`http://localhost:5003/threads/${threadId}/replies`, {\n        content: newReplyContent,\n        author: username\n      });\n      setReplies([...replies, {\n        content: newReplyContent,\n        author: username\n      }]);\n      setNewReplyContent(\"\");\n    } catch (error) {\n      console.error(\"Error adding reply:\", error);\n    }\n  };\n  if (!thread) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: thread.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: thread.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", thread.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Replies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"replies\",\n      children: replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", reply.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-reply\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a reply...\",\n        value: newReplyContent,\n        onChange: e => setNewReplyContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddReply,\n        children: \"Add Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThreadDetail, \"hFm48dIvtE1o3Kb9yRPxEBNp5tM=\", false, function () {\n  return [useParams];\n});\n_c2 = ThreadDetail;\nexport default Forum;\nvar _c, _c2;\n$RefreshReg$(_c, \"Forum\");\n$RefreshReg$(_c2, \"ThreadDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useParams","jsxDEV","_jsxDEV","Forum","_s","threads","setThreads","newThreadTitle","setNewThreadTitle","newThreadContent","setNewThreadContent","username","localStorage","getItem","fetchThreads","response","get","data","error","console","handleCreateThread","post","title","content","author","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","thread","to","id","replies","lastUpdated","_c","ThreadDetail","_s2","threadId","setThread","setReplies","newReplyContent","setNewReplyContent","fetchThread","threadResponse","repliesResponse","handleAddReply","reply","index","_c2","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 4/ramprealm/client/src/components/forum.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"../css/forum.css\";\r\n\r\nconst Forum = () => {\r\n  const [threads, setThreads] = useState([]);\r\n  const [newThreadTitle, setNewThreadTitle] = useState(\"\");\r\n  const [newThreadContent, setNewThreadContent] = useState(\"\");\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5003/threads\");\r\n        setThreads(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching threads:\", error);\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  const handleCreateThread = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5003/threads\", {\r\n        title: newThreadTitle,\r\n        content: newThreadContent,\r\n        author: username,\r\n      });\r\n      setThreads([...threads, response.data]);\r\n      setNewThreadTitle(\"\");\r\n      setNewThreadContent(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error creating thread:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forum-container\">\r\n      <h1>Forum</h1>\r\n      <div className=\"create-thread\">\r\n        <h2>Create a New Thread</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newThreadTitle}\r\n          onChange={(e) => setNewThreadTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Content\"\r\n          value={newThreadContent}\r\n          onChange={(e) => setNewThreadContent(e.target.value)}\r\n        />\r\n        <button onClick={handleCreateThread}>Create Thread</button>\r\n      </div>\r\n      <div className=\"threads-list\">\r\n        {threads.map((thread) => (\r\n          <div key={thread.id} className=\"thread\">\r\n            <h2>\r\n              <Link to={`/forum/${thread.id}`}>{thread.title}</Link>\r\n            </h2>\r\n            <p>Author: {thread.author}</p>\r\n            <p>Replies: {thread.replies}</p>\r\n            <p>Last Updated: {thread.lastUpdated}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ThreadDetail = () => {\r\n  const { threadId } = useParams();\r\n  const [thread, setThread] = useState(null);\r\n  const [replies, setReplies] = useState([]);\r\n  const [newReplyContent, setNewReplyContent] = useState(\"\");\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  useEffect(() => {\r\n    const fetchThread = async () => {\r\n      try {\r\n        const threadResponse = await axios.get(\r\n          `http://localhost:5003/threads/${threadId}`\r\n        );\r\n        setThread(threadResponse.data);\r\n        const repliesResponse = await axios.get(\r\n          `http://localhost:5003/threads/${threadId}/replies`\r\n        );\r\n        setReplies(repliesResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching thread:\", error);\r\n      }\r\n    };\r\n\r\n    fetchThread();\r\n  }, [threadId]);\r\n\r\n  const handleAddReply = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:5003/threads/${threadId}/replies`, {\r\n        content: newReplyContent,\r\n        author: username,\r\n      });\r\n      setReplies([...replies, { content: newReplyContent, author: username }]);\r\n      setNewReplyContent(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding reply:\", error);\r\n    }\r\n  };\r\n\r\n  if (!thread) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"thread-detail\">\r\n      <h2>{thread.title}</h2>\r\n      <p>{thread.content}</p>\r\n      <p>Author: {thread.author}</p>\r\n      <h3>Replies</h3>\r\n      <div className=\"replies\">\r\n        {replies.map((reply, index) => (\r\n          <div key={index} className=\"reply\">\r\n            <p>{reply.content}</p>\r\n            <p>Author: {reply.author}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"add-reply\">\r\n        <textarea\r\n          placeholder=\"Add a reply...\"\r\n          value={newReplyContent}\r\n          onChange={(e) => setNewReplyContent(e.target.value)}\r\n        />\r\n        <button onClick={handleAddReply}>Add Reply</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forum;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}