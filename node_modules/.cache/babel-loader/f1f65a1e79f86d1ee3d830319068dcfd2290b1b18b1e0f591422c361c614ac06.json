{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 2\\\\peerhealhaven\\\\src\\\\components\\\\Exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/Exercise.css\";\nimport NavBar2 from \"./NavBar2.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercise = () => {\n  _s();\n  const emotions = [\"Anger\", \"Anxiety\", \"Stress\", \"Sadness\", \"Happiness\"];\n  const exercises = {\n    Anger: [{\n      name: \"Deep Breathing\",\n      compliment: \"Great job on practicing deep breathing!\"\n    }, {\n      name: \"Count to 10\",\n      compliment: \"You're doing great with counting to 10!\"\n    }, {\n      name: \"Physical Activity\",\n      compliment: \"Keep up the good work with physical activity!\"\n    }, {\n      name: \"Visualization\",\n      compliment: \"You're doing well with visualization!\"\n    }, {\n      name: \"Progressive Muscle Relaxation\",\n      compliment: \"You're making progress with muscle relaxation!\"\n    }],\n    Anxiety: [{\n      name: \"Deep Breathing Exercises\",\n      compliment: \"Great job on practicing deep breathing exercises!\"\n    }, {\n      name: \"Grounding Techniques\",\n      compliment: \"You're doing great with grounding techniques!\"\n    }, {\n      name: \"Mindfulness Meditation\",\n      compliment: \"Keep up the good work with mindfulness meditation!\"\n    }, {\n      name: \"Progressive Muscle Relaxation\",\n      compliment: \"You're making progress with muscle relaxation!\"\n    }, {\n      name: \"Guided Imagery\",\n      compliment: \"You're doing well with guided imagery!\"\n    }],\n    Stress: [{\n      name: \"Deep Breathing\",\n      compliment: \"Great job on practicing deep breathing!\"\n    }, {\n      name: \"Mindfulness Meditation\",\n      compliment: \"You're doing great with mindfulness meditation!\"\n    }, {\n      name: \"Physical Activity\",\n      compliment: \"Keep up the good work with physical activity!\"\n    }, {\n      name: \"Journaling\",\n      compliment: \"You're making progress with journaling!\"\n    }, {\n      name: \"Progressive Muscle Relaxation\",\n      compliment: \"You're doing well with muscle relaxation!\"\n    }],\n    Sadness: [{\n      name: \"Expressive Writing\",\n      compliment: \"Great job on expressive writing!\"\n    }, {\n      name: \"Reach Out\",\n      compliment: \"You're doing great with reaching out!\"\n    }, {\n      name: \"Practice Self-Compassion\",\n      compliment: \"Keep up the good work with self-compassion!\"\n    }, {\n      name: \"Engage in Activities You Enjoy\",\n      compliment: \"You're making progress with engaging in activities you enjoy!\"\n    }, {\n      name: \"Practice Gratitude\",\n      compliment: \"You're doing well with practicing gratitude!\"\n    }],\n    Happiness: [{\n      name: \"Gratitude Practice\",\n      compliment: \"Great job on gratitude practice!\"\n    }, {\n      name: \"Acts of Kindness\",\n      compliment: \"You're doing great with acts of kindness!\"\n    }, {\n      name: \"Spend Time with Loved Ones\",\n      compliment: \"Keep up the good work with spending time with loved ones!\"\n    }, {\n      name: \"Engage in Activities You Love\",\n      compliment: \"You're making progress with engaging in activities you love!\"\n    }, {\n      name: \"Practice Mindfulness\",\n      compliment: \"You're doing well with practicing mindfulness!\"\n    }]\n  };\n\n  // State to manage selected emotion and exercises\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\n\n  // Function to handle emotion selection\n  const handleEmotionSelection = emotion => {\n    setSelectedEmotion(emotion);\n  };\n\n  // Function to handle exercise selection\n  const handleExerciseSelection = exercise => {\n    // Logic to handle exercise selection\n    console.log(`Selected exercise: ${exercise}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Emotion Control Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emotion-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-scroll\",\n          children: emotions.map(emotion => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEmotionSelection(emotion),\n            className: selectedEmotion === emotion ? \"selected\" : \"\",\n            children: emotion\n          }, emotion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), selectedEmotion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedEmotion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-list\",\n          children: exercises[selectedEmotion].map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-item\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `exercise-${index}`,\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"6f7cN6xeBSH9K6xnDtAFt8iWCfQ=\");\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","NavBar2","jsxDEV","_jsxDEV","Exercise","_s","emotions","exercises","Anger","name","compliment","Anxiety","Stress","Sadness","Happiness","selectedEmotion","setSelectedEmotion","handleEmotionSelection","emotion","handleExerciseSelection","exercise","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","index","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 2/peerhealhaven/src/components/Exercise.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/Exercise.css\";\r\nimport NavBar2 from \"./NavBar2.js\";\r\n\r\nconst Exercise = () => {\r\n  const emotions = [\"Anger\", \"Anxiety\", \"Stress\", \"Sadness\", \"Happiness\"];\r\n  const exercises = {\r\n    Anger: [\r\n      {\r\n        name: \"Deep Breathing\",\r\n        compliment: \"Great job on practicing deep breathing!\",\r\n      },\r\n      {\r\n        name: \"Count to 10\",\r\n        compliment: \"You're doing great with counting to 10!\",\r\n      },\r\n      {\r\n        name: \"Physical Activity\",\r\n        compliment: \"Keep up the good work with physical activity!\",\r\n      },\r\n      {\r\n        name: \"Visualization\",\r\n        compliment: \"You're doing well with visualization!\",\r\n      },\r\n      {\r\n        name: \"Progressive Muscle Relaxation\",\r\n        compliment: \"You're making progress with muscle relaxation!\",\r\n      },\r\n    ],\r\n    Anxiety: [\r\n      {\r\n        name: \"Deep Breathing Exercises\",\r\n        compliment: \"Great job on practicing deep breathing exercises!\",\r\n      },\r\n      {\r\n        name: \"Grounding Techniques\",\r\n        compliment: \"You're doing great with grounding techniques!\",\r\n      },\r\n      {\r\n        name: \"Mindfulness Meditation\",\r\n        compliment: \"Keep up the good work with mindfulness meditation!\",\r\n      },\r\n      {\r\n        name: \"Progressive Muscle Relaxation\",\r\n        compliment: \"You're making progress with muscle relaxation!\",\r\n      },\r\n      {\r\n        name: \"Guided Imagery\",\r\n        compliment: \"You're doing well with guided imagery!\",\r\n      },\r\n    ],\r\n    Stress: [\r\n      {\r\n        name: \"Deep Breathing\",\r\n        compliment: \"Great job on practicing deep breathing!\",\r\n      },\r\n      {\r\n        name: \"Mindfulness Meditation\",\r\n        compliment: \"You're doing great with mindfulness meditation!\",\r\n      },\r\n      {\r\n        name: \"Physical Activity\",\r\n        compliment: \"Keep up the good work with physical activity!\",\r\n      },\r\n      {\r\n        name: \"Journaling\",\r\n        compliment: \"You're making progress with journaling!\",\r\n      },\r\n      {\r\n        name: \"Progressive Muscle Relaxation\",\r\n        compliment: \"You're doing well with muscle relaxation!\",\r\n      },\r\n    ],\r\n    Sadness: [\r\n      {\r\n        name: \"Expressive Writing\",\r\n        compliment: \"Great job on expressive writing!\",\r\n      },\r\n      {\r\n        name: \"Reach Out\",\r\n        compliment: \"You're doing great with reaching out!\",\r\n      },\r\n      {\r\n        name: \"Practice Self-Compassion\",\r\n        compliment: \"Keep up the good work with self-compassion!\",\r\n      },\r\n      {\r\n        name: \"Engage in Activities You Enjoy\",\r\n        compliment:\r\n          \"You're making progress with engaging in activities you enjoy!\",\r\n      },\r\n      {\r\n        name: \"Practice Gratitude\",\r\n        compliment: \"You're doing well with practicing gratitude!\",\r\n      },\r\n    ],\r\n    Happiness: [\r\n      {\r\n        name: \"Gratitude Practice\",\r\n        compliment: \"Great job on gratitude practice!\",\r\n      },\r\n      {\r\n        name: \"Acts of Kindness\",\r\n        compliment: \"You're doing great with acts of kindness!\",\r\n      },\r\n      {\r\n        name: \"Spend Time with Loved Ones\",\r\n        compliment: \"Keep up the good work with spending time with loved ones!\",\r\n      },\r\n      {\r\n        name: \"Engage in Activities You Love\",\r\n        compliment:\r\n          \"You're making progress with engaging in activities you love!\",\r\n      },\r\n      {\r\n        name: \"Practice Mindfulness\",\r\n        compliment: \"You're doing well with practicing mindfulness!\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // State to manage selected emotion and exercises\r\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\r\n\r\n  // Function to handle emotion selection\r\n  const handleEmotionSelection = (emotion) => {\r\n    setSelectedEmotion(emotion);\r\n  };\r\n\r\n  // Function to handle exercise selection\r\n  const handleExerciseSelection = (exercise) => {\r\n    // Logic to handle exercise selection\r\n    console.log(`Selected exercise: ${exercise}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar2 />\r\n      <div className=\"exercise-container\">\r\n        <h2>Emotion Control Exercises</h2>\r\n        <div className=\"emotion-list\">\r\n          {/* Render list of emotions */}\r\n          <div className=\"emotion-scroll\">\r\n            {emotions.map((emotion) => (\r\n              <button\r\n                key={emotion}\r\n                onClick={() => handleEmotionSelection(emotion)}\r\n                className={selectedEmotion === emotion ? \"selected\" : \"\"}\r\n              >\r\n                {emotion}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* Display exercises for selected emotion */}\r\n        {selectedEmotion && (\r\n          <div className=\"exercise\">\r\n            <h3>{selectedEmotion}</h3>\r\n            <div className=\"exercise-list\">\r\n              {exercises[selectedEmotion].map((exercise, index) => (\r\n                <div key={index} className=\"exercise-item\">\r\n                  <label htmlFor={`exercise-${index}`}>{exercise.name}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}