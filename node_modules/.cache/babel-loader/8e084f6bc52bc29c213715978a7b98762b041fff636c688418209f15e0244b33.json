{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 2\\\\peerhealhaven\\\\src\\\\components\\\\Exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/Exercise.css\";\nimport NavBar2 from \"./NavBar2.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercise = () => {\n  _s();\n  const emotions = [\"Anger\", \"Anxiety\", \"Stress\", \"Sadness\", \"Happiness\"];\n  const exercises = {\n    Anger: \"Exercise for managing anger: Deep Breathing, Count to 10, Physical Activity, Visualization, Progressive Muscle Relaxation\",\n    Anxiety: \"Exercise for reducing anxiety: Deep Breathing Exercises, Grounding Techniques, Mindfulness Meditation, Progressive Muscle Relaxation, Guided Imagery\",\n    Stress: \"Exercise for coping with stress: Deep Breathing, Mindfulness Meditation, Physical Activity, Journaling, Progressive Muscle Relaxation\",\n    Sadness: \"Exercise for dealing with sadness: Expressive Writing, Reach Out, Practice Self-Compassion, Engage in Activities You Enjoy, Practice Gratitude\",\n    Happiness: \"Exercise for enhancing happiness: Gratitude Practice, Acts of Kindness, Spend Time with Loved Ones, Engage in Activities You Love, Practice Mindfulness\"\n  };\n\n  // State to manage selected emotion and compliment\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\n  const [compliment, setCompliment] = useState(false);\n\n  // Function to handle emotion selection\n  const handleEmotionSelection = emotion => {\n    setSelectedEmotion(emotion);\n    setCompliment(false); // Reset compliment state when emotion changes\n  };\n\n  // Function to toggle compliment state\n  const handleComplimentToggle = () => {\n    setCompliment(!compliment);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Emotion Control Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emotion-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-scroll\",\n          children: emotions.map(emotion => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEmotionSelection(emotion),\n            className: selectedEmotion === emotion ? \"selected\" : \"\",\n            children: emotion\n          }, emotion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), selectedEmotion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedEmotion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: exercises[selectedEmotion]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compliment-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"compliment\",\n            checked: compliment,\n            onChange: handleComplimentToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"compliment\",\n            children: \"Compliment Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), compliment && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compliment-message\",\n          children: \"You're doing great! Keep up the good work!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"/pX2wAQahB5tSKxMR7soEqmf+Lg=\");\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","NavBar2","jsxDEV","_jsxDEV","Exercise","_s","emotions","exercises","Anger","Anxiety","Stress","Sadness","Happiness","selectedEmotion","setSelectedEmotion","compliment","setCompliment","handleEmotionSelection","emotion","handleComplimentToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","type","id","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 2/peerhealhaven/src/components/Exercise.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/Exercise.css\";\r\nimport NavBar2 from \"./NavBar2.js\";\r\n\r\nconst Exercise = () => {\r\n  const emotions = [\"Anger\", \"Anxiety\", \"Stress\", \"Sadness\", \"Happiness\"];\r\n  const exercises = {\r\n    Anger:\r\n      \"Exercise for managing anger: Deep Breathing, Count to 10, Physical Activity, Visualization, Progressive Muscle Relaxation\",\r\n    Anxiety:\r\n      \"Exercise for reducing anxiety: Deep Breathing Exercises, Grounding Techniques, Mindfulness Meditation, Progressive Muscle Relaxation, Guided Imagery\",\r\n    Stress:\r\n      \"Exercise for coping with stress: Deep Breathing, Mindfulness Meditation, Physical Activity, Journaling, Progressive Muscle Relaxation\",\r\n    Sadness:\r\n      \"Exercise for dealing with sadness: Expressive Writing, Reach Out, Practice Self-Compassion, Engage in Activities You Enjoy, Practice Gratitude\",\r\n    Happiness:\r\n      \"Exercise for enhancing happiness: Gratitude Practice, Acts of Kindness, Spend Time with Loved Ones, Engage in Activities You Love, Practice Mindfulness\",\r\n  };\r\n\r\n  // State to manage selected emotion and compliment\r\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\r\n  const [compliment, setCompliment] = useState(false);\r\n\r\n  // Function to handle emotion selection\r\n  const handleEmotionSelection = (emotion) => {\r\n    setSelectedEmotion(emotion);\r\n    setCompliment(false); // Reset compliment state when emotion changes\r\n  };\r\n\r\n  // Function to toggle compliment state\r\n  const handleComplimentToggle = () => {\r\n    setCompliment(!compliment);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar2 />\r\n      <div className=\"exercise-container\">\r\n        <h2>Emotion Control Exercises</h2>\r\n        <div className=\"emotion-list\">\r\n          {/* Render list of emotions with scroll bar */}\r\n          <div className=\"emotion-scroll\">\r\n            {emotions.map((emotion) => (\r\n              <button\r\n                key={emotion}\r\n                onClick={() => handleEmotionSelection(emotion)}\r\n                className={selectedEmotion === emotion ? \"selected\" : \"\"}\r\n              >\r\n                {emotion}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* Display exercise for selected emotion */}\r\n        {selectedEmotion && (\r\n          <div className=\"exercise\">\r\n            <h3>{selectedEmotion}</h3>\r\n            <p>{exercises[selectedEmotion]}</p>\r\n            <div className=\"compliment-section\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"compliment\"\r\n                checked={compliment}\r\n                onChange={handleComplimentToggle}\r\n              />\r\n              <label htmlFor=\"compliment\">Compliment Exercise</label>\r\n            </div>\r\n            {compliment && (\r\n              <div className=\"compliment-message\">\r\n                You're doing great! Keep up the good work!\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}