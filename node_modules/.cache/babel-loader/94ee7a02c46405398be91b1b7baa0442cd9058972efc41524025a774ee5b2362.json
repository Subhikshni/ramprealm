{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 3\\\\checkmatecentral\\\\client\\\\src\\\\components\\\\chessbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Chess from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBot = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(\"start\");\n  const makeBotMove = useCallback(() => {\n    if (!game.game_over() && game.turn() === \"b\") {\n      const moves = game.moves();\n      if (moves.length > 0) {\n        const move = moves[Math.floor(Math.random() * moves.length)];\n        game.move(move);\n        setFen(game.fen());\n      }\n    }\n  }, [game]);\n  useEffect(() => {\n    if (game.turn() === \"b\") {\n      setTimeout(makeBotMove, 500);\n    }\n  }, [game, makeBotMove]);\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // always promote to a queen for simplicity\n    });\n    if (move === null) return; // move is not legal\n\n    setFen(game.fen());\n    setTimeout(makeBotMove, 500); // Trigger bot move after player's move\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chess Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      width: 400,\n      position: fen,\n      onDrop: onDrop,\n      transitionDuration: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBot, \"3/MqcLZpiWPd9fS7CyQbCF0DJ28=\");\n_c = ChessBot;\nexport default ChessBot;\nvar _c;\n$RefreshReg$(_c, \"ChessBot\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Chess","Chessboard","jsxDEV","_jsxDEV","ChessBot","_s","game","setGame","fen","setFen","makeBotMove","game_over","turn","moves","length","move","Math","floor","random","setTimeout","onDrop","sourceSquare","targetSquare","from","to","promotion","children","fileName","_jsxFileName","lineNumber","columnNumber","width","position","transitionDuration","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 3/checkmatecentral/client/src/components/chessbot.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport Chessboard from \"chessboardjsx\";\r\n\r\nconst ChessBot = () => {\r\n  const [game, setGame] = useState(new Chess());\r\n  const [fen, setFen] = useState(\"start\");\r\n\r\n  const makeBotMove = useCallback(() => {\r\n    if (!game.game_over() && game.turn() === \"b\") {\r\n      const moves = game.moves();\r\n      if (moves.length > 0) {\r\n        const move = moves[Math.floor(Math.random() * moves.length)];\r\n        game.move(move);\r\n        setFen(game.fen());\r\n      }\r\n    }\r\n  }, [game]);\r\n\r\n  useEffect(() => {\r\n    if (game.turn() === \"b\") {\r\n      setTimeout(makeBotMove, 500);\r\n    }\r\n  }, [game, makeBotMove]);\r\n\r\n  const onDrop = ({ sourceSquare, targetSquare }) => {\r\n    const move = game.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for simplicity\r\n    });\r\n\r\n    if (move === null) return; // move is not legal\r\n\r\n    setFen(game.fen());\r\n\r\n    setTimeout(makeBotMove, 500); // Trigger bot move after player's move\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chess Bot</h2>\r\n      <Chessboard\r\n        width={400}\r\n        position={fen}\r\n        onDrop={onDrop}\r\n        transitionDuration={300}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessBot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAIG,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAEvC,MAAMa,WAAW,GAAGX,WAAW,CAAC,MAAM;IACpC,IAAI,CAACO,IAAI,CAACK,SAAS,CAAC,CAAC,IAAIL,IAAI,CAACM,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE;MAC5C,MAAMC,KAAK,GAAGP,IAAI,CAACO,KAAK,CAAC,CAAC;MAC1B,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;QACpB,MAAMC,IAAI,GAAGF,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,KAAK,CAACC,MAAM,CAAC,CAAC;QAC5DR,IAAI,CAACS,IAAI,CAACA,IAAI,CAAC;QACfN,MAAM,CAACH,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC;MACpB;IACF;EACF,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEVR,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,CAACM,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE;MACvBO,UAAU,CAACT,WAAW,EAAE,GAAG,CAAC;IAC9B;EACF,CAAC,EAAE,CAACJ,IAAI,EAAEI,WAAW,CAAC,CAAC;EAEvB,MAAMU,MAAM,GAAGA,CAAC;IAAEC,YAAY;IAAEC;EAAa,CAAC,KAAK;IACjD,MAAMP,IAAI,GAAGT,IAAI,CAACS,IAAI,CAAC;MACrBQ,IAAI,EAAEF,YAAY;MAClBG,EAAE,EAAEF,YAAY;MAChBG,SAAS,EAAE,GAAG,CAAE;IAClB,CAAC,CAAC;IAEF,IAAIV,IAAI,KAAK,IAAI,EAAE,OAAO,CAAC;;IAE3BN,MAAM,CAACH,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC;IAElBW,UAAU,CAACT,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACEP,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA,CAACF,UAAU;MACT8B,KAAK,EAAE,GAAI;MACXC,QAAQ,EAAExB,GAAI;MACdY,MAAM,EAAEA,MAAO;MACfa,kBAAkB,EAAE;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA9CID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}