{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 2\\\\peerhealhaven\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      sender: \"user\",\n      text: input\n    }]);\n    setInput(\"\");\n    handleChatbotResponse(input);\n  };\n  const handleChatbotResponse = input => {\n    // Simple logic for chatbot response (hardcoded)\n    let response;\n    switch (input.toLowerCase()) {\n      case \"hello\":\n        response = \"Hi there!\";\n        break;\n      case \"how are you?\":\n        response = \"I am just a chatbot.\";\n        break;\n      default:\n        response = \"I'm sorry, I didn't understand that.\";\n    }\n    setMessages([...messages, {\n      sender: \"chatbot\",\n      text: response\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleInputChange","e","target","value","handleSendMessage","trim","sender","text","handleChatbotResponse","response","toLowerCase","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 2/peerhealhaven/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n    setMessages([...messages, { sender: \"user\", text: input }]);\r\n    setInput(\"\");\r\n    handleChatbotResponse(input);\r\n  };\r\n\r\n  const handleChatbotResponse = (input) => {\r\n    // Simple logic for chatbot response (hardcoded)\r\n    let response;\r\n    switch (input.toLowerCase()) {\r\n      case \"hello\":\r\n        response = \"Hi there!\";\r\n        break;\r\n      case \"how are you?\":\r\n        response = \"I am just a chatbot.\";\r\n        break;\r\n      default:\r\n        response = \"I'm sorry, I didn't understand that.\";\r\n    }\r\n    setMessages([...messages, { sender: \"chatbot\", text: response }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;IACnBR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEU,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAET;IAAM,CAAC,CAAC,CAAC;IAC3DC,QAAQ,CAAC,EAAE,CAAC;IACZS,qBAAqB,CAACV,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMU,qBAAqB,GAAIV,KAAK,IAAK;IACvC;IACA,IAAIW,QAAQ;IACZ,QAAQX,KAAK,CAACY,WAAW,CAAC,CAAC;MACzB,KAAK,OAAO;QACVD,QAAQ,GAAG,WAAW;QACtB;MACF,KAAK,cAAc;QACjBA,QAAQ,GAAG,sBAAsB;QACjC;MACF;QACEA,QAAQ,GAAG,sCAAsC;IACrD;IACAZ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEU,MAAM,EAAE,SAAS;MAAEC,IAAI,EAAEE;IAAS,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCnB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BtB,OAAA;QAAiBkB,SAAS,EAAG,WAAUG,OAAO,CAACR,MAAO,EAAE;QAAAM,QAAA,EACrDE,OAAO,CAACP;MAAI,GADLQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BnB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BlB,KAAK,EAAEL,KAAM;QACbwB,QAAQ,EAAEtB;MAAkB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACF1B,OAAA;QAAQ8B,OAAO,EAAEnB,iBAAkB;QAAAQ,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnDID,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}