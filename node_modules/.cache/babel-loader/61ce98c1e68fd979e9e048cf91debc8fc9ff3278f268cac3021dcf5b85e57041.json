{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 3\\\\checkmatecentral\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport NavBar2 from \"./NavBar2\";\nimport \"../css/chessbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBot = () => {\n  _s();\n  const [chess] = useState(new Chess());\n  const [playerColor, setPlayerColor] = useState(\"white\");\n  const [difficulty, setDifficulty] = useState(\"medium\");\n  const [fen, setFen] = useState(chess.fen());\n  const [showInvalidMovePopup, setShowInvalidMovePopup] = useState(false);\n  const [orientation, setOrientation] = useState(\"white\");\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOverMessage, setGameOverMessage] = useState(\"\");\n  const [promotionDialog, setPromotionDialog] = useState({\n    show: false,\n    move: null\n  });\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  useEffect(() => {\n    if (playerColor === \"black\" && chess.turn() === \"b\") {\n      setTimeout(makeBotMove, 500);\n    }\n  }, [playerColor, chess]);\n  const handlePlayerColorChange = e => {\n    const selectedColor = e.target.value;\n    setPlayerColor(selectedColor);\n    setOrientation(selectedColor === \"black\" ? \"black\" : \"white\");\n    if (selectedColor === \"black\" && chess.turn() === \"b\") {\n      setTimeout(makeBotMove, 500); // Allow some time for the UI to update\n    }\n  };\n  const handleDifficultyChange = e => {\n    setDifficulty(e.target.value);\n  };\n  const makeBotMove = async () => {\n    if (chess.isGameOver()) return;\n    let depth;\n    switch (difficulty) {\n      case \"easy\":\n        depth = 5; // Lower depth for easier difficulty\n        break;\n      case \"medium\":\n        depth = 10;\n        break;\n      case \"hard\":\n        depth = 15; // Higher depth for harder difficulty\n        break;\n      default:\n        depth = 5;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5002/chess/move\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fen: chess.fen(),\n          depth\n        })\n      });\n      const data = await response.json();\n      if (data.engineOutput) {\n        const bestMove = data.engineOutput.trim(); // Assuming the output is the best move in UCI format\n        chess.move({\n          from: bestMove.substring(0, 2),\n          to: bestMove.substring(2, 4),\n          promotion: bestMove[4] // Handle promotion if any\n        });\n        setFen(chess.fen());\n        updateMoveHistory();\n        checkGameOver();\n      }\n    } catch (error) {\n      console.error(\"Error fetching move from Sunfish:\", error);\n    }\n  };\n  const handleDrop = (sourceSquare, targetSquare) => {\n    // Validate the move against the current chess position\n    const moveResult = chess.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // Assume promotion to queen for simplicity\n    });\n\n    // Check if the move is invalid\n    if (!moveResult) {\n      setShowInvalidMovePopup(true);\n      return false;\n    }\n\n    // Handle pawn promotion\n    if (moveResult.flags.includes(\"p\")) {\n      setPromotionDialog({\n        show: true,\n        move: moveResult\n      });\n      return false;\n    }\n\n    // Update the board and move history\n    setFen(chess.fen());\n    updateMoveHistory();\n    checkGameOver();\n\n    // Make bot move after a delay\n    setTimeout(makeBotMove, 500);\n    return true;\n  };\n  const handlePromotion = piece => {\n    const {\n      move\n    } = promotionDialog;\n    chess.undo();\n    chess.move({\n      from: move.from,\n      to: move.to,\n      promotion: piece\n    });\n    setFen(chess.fen());\n    updateMoveHistory();\n    checkGameOver();\n    setPromotionDialog({\n      show: false,\n      move: null\n    });\n    setTimeout(makeBotMove, 500);\n  };\n  const handleInvalidMovePopupClose = () => {\n    setShowInvalidMovePopup(false);\n  };\n  const updateMoveHistory = () => {\n    const history = chess.history({\n      verbose: true\n    });\n    setMoveHistory(history);\n  };\n  const checkGameOver = () => {\n    if (chess.isCheckmate()) {\n      setGameOverMessage(`Checkmate! ${chess.turn() === \"w\" ? \"Black\" : \"White\"} wins.`);\n    } else if (chess.isStalemate()) {\n      setGameOverMessage(\"Stalemate! It's a draw.\");\n    } else if (chess.isDraw()) {\n      setGameOverMessage(\"It's a draw.\");\n    }\n  };\n  const handleSquareClick = square => {\n    const moves = chess.moves({\n      square,\n      verbose: true\n    });\n    if (moves.length === 0) {\n      setHighlightedSquares({});\n      return;\n    }\n    const squaresToHighlight = {};\n    moves.forEach(move => {\n      squaresToHighlight[move.to] = {\n        background: \"radial-gradient(circle, #fffc00 36%, transparent 40%)\",\n        borderRadius: \"50%\"\n      };\n    });\n    squaresToHighlight[square] = {\n      background: \"rgba(255, 255, 0, 0.4)\"\n    };\n    setHighlightedSquares(squaresToHighlight);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Choose player color:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: playerColor,\n              onChange: handlePlayerColorChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"white\",\n                children: \"White\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"black\",\n                children: \"Black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Choose difficulty:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: difficulty,\n              onChange: handleDifficultyChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"easy\",\n                children: \"Easy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"hard\",\n                children: \"Hard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-container\",\n        children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n          position: fen,\n          boardOrientation: orientation,\n          onPieceDrop: handleDrop,\n          customSquareStyles: highlightedSquares\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), showInvalidMovePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-move-popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: handleInvalidMovePopupClose,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Invalid move. Please try again.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"move-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [index % 2 === 0 ? \"White\" : \"Black\", \": \", move.san]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), gameOverMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gameOverMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), promotionDialog.show && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"promotion-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"promotion-dialog-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Choose Promotion Piece\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePromotion(\"q\"),\n            children: \"Queen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePromotion(\"r\"),\n            children: \"Rook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePromotion(\"b\"),\n            children: \"Bishop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePromotion(\"n\"),\n            children: \"Knight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBot, \"6CejZa8H1s0vHZs9Ns59Hhc2pEs=\");\n_c = ChessBot;\nexport default ChessBot;\nvar _c;\n$RefreshReg$(_c, \"ChessBot\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","NavBar2","jsxDEV","_jsxDEV","ChessBot","_s","chess","playerColor","setPlayerColor","difficulty","setDifficulty","fen","setFen","showInvalidMovePopup","setShowInvalidMovePopup","orientation","setOrientation","moveHistory","setMoveHistory","gameOverMessage","setGameOverMessage","promotionDialog","setPromotionDialog","show","move","highlightedSquares","setHighlightedSquares","turn","setTimeout","makeBotMove","handlePlayerColorChange","e","selectedColor","target","value","handleDifficultyChange","isGameOver","depth","response","fetch","method","headers","body","JSON","stringify","data","json","engineOutput","bestMove","trim","from","substring","to","promotion","updateMoveHistory","checkGameOver","error","console","handleDrop","sourceSquare","targetSquare","moveResult","flags","includes","handlePromotion","piece","undo","handleInvalidMovePopupClose","history","verbose","isCheckmate","isStalemate","isDraw","handleSquareClick","square","moves","length","squaresToHighlight","forEach","background","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","position","boardOrientation","onPieceDrop","customSquareStyles","onClick","map","index","san","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 3/checkmatecentral/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport NavBar2 from \"./NavBar2\";\nimport \"../css/chessbot.css\";\n\nconst ChessBot = () => {\n  const [chess] = useState(new Chess());\n  const [playerColor, setPlayerColor] = useState(\"white\");\n  const [difficulty, setDifficulty] = useState(\"medium\");\n  const [fen, setFen] = useState(chess.fen());\n  const [showInvalidMovePopup, setShowInvalidMovePopup] = useState(false);\n  const [orientation, setOrientation] = useState(\"white\");\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOverMessage, setGameOverMessage] = useState(\"\");\n  const [promotionDialog, setPromotionDialog] = useState({\n    show: false,\n    move: null,\n  });\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n\n  useEffect(() => {\n    if (playerColor === \"black\" && chess.turn() === \"b\") {\n      setTimeout(makeBotMove, 500);\n    }\n  }, [playerColor, chess]);\n\n  const handlePlayerColorChange = (e) => {\n    const selectedColor = e.target.value;\n    setPlayerColor(selectedColor);\n    setOrientation(selectedColor === \"black\" ? \"black\" : \"white\");\n\n    if (selectedColor === \"black\" && chess.turn() === \"b\") {\n      setTimeout(makeBotMove, 500); // Allow some time for the UI to update\n    }\n  };\n\n  const handleDifficultyChange = (e) => {\n    setDifficulty(e.target.value);\n  };\n\n  const makeBotMove = async () => {\n    if (chess.isGameOver()) return;\n\n    let depth;\n    switch (difficulty) {\n      case \"easy\":\n        depth = 5; // Lower depth for easier difficulty\n        break;\n      case \"medium\":\n        depth = 10;\n        break;\n      case \"hard\":\n        depth = 15; // Higher depth for harder difficulty\n        break;\n      default:\n        depth = 5;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5002/chess/move\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ fen: chess.fen(), depth }),\n      });\n\n      const data = await response.json();\n      if (data.engineOutput) {\n        const bestMove = data.engineOutput.trim(); // Assuming the output is the best move in UCI format\n        chess.move({\n          from: bestMove.substring(0, 2),\n          to: bestMove.substring(2, 4),\n          promotion: bestMove[4], // Handle promotion if any\n        });\n        setFen(chess.fen());\n        updateMoveHistory();\n        checkGameOver();\n      }\n    } catch (error) {\n      console.error(\"Error fetching move from Sunfish:\", error);\n    }\n  };\n\n  const handleDrop = (sourceSquare, targetSquare) => {\n    // Validate the move against the current chess position\n    const moveResult = chess.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\", // Assume promotion to queen for simplicity\n    });\n\n    // Check if the move is invalid\n    if (!moveResult) {\n      setShowInvalidMovePopup(true);\n      return false;\n    }\n\n    // Handle pawn promotion\n    if (moveResult.flags.includes(\"p\")) {\n      setPromotionDialog({ show: true, move: moveResult });\n      return false;\n    }\n\n    // Update the board and move history\n    setFen(chess.fen());\n    updateMoveHistory();\n    checkGameOver();\n\n    // Make bot move after a delay\n    setTimeout(makeBotMove, 500);\n    return true;\n  };\n\n  const handlePromotion = (piece) => {\n    const { move } = promotionDialog;\n    chess.undo();\n    chess.move({\n      from: move.from,\n      to: move.to,\n      promotion: piece,\n    });\n    setFen(chess.fen());\n    updateMoveHistory();\n    checkGameOver();\n    setPromotionDialog({ show: false, move: null });\n    setTimeout(makeBotMove, 500);\n  };\n\n  const handleInvalidMovePopupClose = () => {\n    setShowInvalidMovePopup(false);\n  };\n\n  const updateMoveHistory = () => {\n    const history = chess.history({ verbose: true });\n    setMoveHistory(history);\n  };\n\n  const checkGameOver = () => {\n    if (chess.isCheckmate()) {\n      setGameOverMessage(\n        `Checkmate! ${chess.turn() === \"w\" ? \"Black\" : \"White\"} wins.`\n      );\n    } else if (chess.isStalemate()) {\n      setGameOverMessage(\"Stalemate! It's a draw.\");\n    } else if (chess.isDraw()) {\n      setGameOverMessage(\"It's a draw.\");\n    }\n  };\n\n  const handleSquareClick = (square) => {\n    const moves = chess.moves({ square, verbose: true });\n\n    if (moves.length === 0) {\n      setHighlightedSquares({});\n      return;\n    }\n\n    const squaresToHighlight = {};\n    moves.forEach((move) => {\n      squaresToHighlight[move.to] = {\n        background: \"radial-gradient(circle, #fffc00 36%, transparent 40%)\",\n        borderRadius: \"50%\",\n      };\n    });\n    squaresToHighlight[square] = {\n      background: \"rgba(255, 255, 0, 0.4)\",\n    };\n    setHighlightedSquares(squaresToHighlight);\n  };\n\n  return (\n    <div>\n      <NavBar2 />\n      <div className=\"chessbot-container\">\n        <div className=\"sidebar\">\n          <div className=\"select-box\">\n            <label>\n              Choose player color:\n              <select value={playerColor} onChange={handlePlayerColorChange}>\n                <option value=\"white\">White</option>\n                <option value=\"black\">Black</option>\n              </select>\n            </label>\n            <label>\n              Choose difficulty:\n              <select value={difficulty} onChange={handleDifficultyChange}>\n                <option value=\"easy\">Easy</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"hard\">Hard</option>\n              </select>\n            </label>\n          </div>\n        </div>\n        <div className=\"board-container\">\n          <Chessboard\n            position={fen}\n            boardOrientation={orientation}\n            onPieceDrop={handleDrop}\n            customSquareStyles={highlightedSquares}\n          />\n          {showInvalidMovePopup && (\n            <div className=\"invalid-move-popup\">\n              <div className=\"popup-content\">\n                <span className=\"close\" onClick={handleInvalidMovePopupClose}>\n                  &times;\n                </span>\n                <p>Invalid move. Please try again.</p>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"move-history\">\n          <h3>Move History</h3>\n          <ul>\n            {moveHistory.map((move, index) => (\n              <li key={index}>\n                {index % 2 === 0 ? \"White\" : \"Black\"}: {move.san}\n              </li>\n            ))}\n          </ul>\n        </div>\n        {gameOverMessage && (\n          <div className=\"game-over-message\">\n            <p>{gameOverMessage}</p>\n          </div>\n        )}\n        {promotionDialog.show && (\n          <div className=\"promotion-dialog\">\n            <div className=\"promotion-dialog-content\">\n              <h3>Choose Promotion Piece</h3>\n              <button onClick={() => handlePromotion(\"q\")}>Queen</button>\n              <button onClick={() => handlePromotion(\"r\")}>Rook</button>\n              <button onClick={() => handlePromotion(\"b\")}>Bishop</button>\n              <button onClick={() => handlePromotion(\"n\")}>Knight</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChessBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}