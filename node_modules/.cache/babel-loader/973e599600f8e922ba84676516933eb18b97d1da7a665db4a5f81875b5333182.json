{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhi\\\\OneDrive\\\\Documents\\\\Project 2\\\\peerhealhaven\\\\src\\\\components\\\\Exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/Exercise.css\";\nimport NavBar2 from \"./NavBar2.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercise = () => {\n  _s();\n  const emotions = [\"Anger\", \"Anxiety\", \"Stress\", \"Sadness\", \"Happiness\"];\n  const exercises = {\n    Anger: [{\n      name: \"Deep Breathing\",\n      compliment: \"Great job on practicing deep breathing!\",\n      points: [\"Take a deep breath in through your nose for 4 seconds.\", \"Hold your breath for 4 seconds.\", \"Exhale slowly through your mouth for 4 seconds.\", \"Repeat the process several times.\"]\n    }, {\n      name: \"Count to 10\",\n      compliment: \"You're doing great with counting to 10!\",\n      points: [\"Count slowly from 1 to 10.\", \"Focus on your breath as you count.\", \"Repeat the process until you feel calmer.\"]\n    }, {\n      name: \"Physical Activity\",\n      compliment: \"Keep up the good work with physical activity!\",\n      points: [\"Go for a brisk walk or run.\", \"Engage in a workout routine.\", \"Practice yoga or tai chi.\", \"Play a sport you enjoy.\"]\n    }, {\n      name: \"Visualization\",\n      compliment: \"You're doing well with visualization!\",\n      points: [\"Close your eyes and imagine a peaceful scene.\", \"Focus on the details, such as sounds, smells, and colors.\", \"Take deep breaths as you visualize the scene.\", \"Feel yourself becoming more relaxed and calm.\"]\n    }, {\n      name: \"Progressive Muscle Relaxation\",\n      compliment: \"You're making progress with muscle relaxation!\",\n      points: [\"Tense and relax each muscle group in your body, starting from your toes and working your way up to your head.\", \"Hold each tension for 5-10 seconds, then release and relax for 20-30 seconds.\", \"Focus on the sensation of relaxation as you release each muscle group.\"]\n    }],\n    Anxiety: [\n      // Add exercises for Anxiety\n    ],\n    Stress: [\n      // Add exercises for Stress\n    ],\n    Sadness: [\n      // Add exercises for Sadness\n    ],\n    Happiness: [\n      // Add exercises for Happiness\n    ]\n  };\n\n  // State to manage selected emotion and exercises\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\n\n  // Function to handle emotion selection\n  const handleEmotionSelection = emotion => {\n    setSelectedEmotion(emotion);\n  };\n\n  // Function to handle exercise selection\n  const handleExerciseSelection = exercise => {\n    // Logic to handle exercise selection\n    console.log(`Selected exercise: ${exercise}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Emotion Control Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emotion-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-scroll\",\n          children: emotions.map(emotion => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEmotionSelection(emotion),\n            className: selectedEmotion === emotion ? \"selected\" : \"\",\n            children: emotion\n          }, emotion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), selectedEmotion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedEmotion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-list\",\n          children: exercises[selectedEmotion].map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `exercise-${index}`,\n              onChange: () => handleExerciseSelection(exercise.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `exercise-${index}`,\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: exercise.points.map((point, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: point\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: exercise.compliment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"6f7cN6xeBSH9K6xnDtAFt8iWCfQ=\");\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","NavBar2","jsxDEV","_jsxDEV","Exercise","_s","emotions","exercises","Anger","name","compliment","points","Anxiety","Stress","Sadness","Happiness","selectedEmotion","setSelectedEmotion","handleEmotionSelection","emotion","handleExerciseSelection","exercise","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","index","type","id","onChange","htmlFor","point","i","_c","$RefreshReg$"],"sources":["C:/Users/subhi/OneDrive/Documents/Project 2/peerhealhaven/src/components/Exercise.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/Exercise.css\";\r\nimport NavBar2 from \"./NavBar2.js\";\r\n\r\nconst Exercise = () => {\r\n  const emotions = [\"Anger\", \"Anxiety\", \"Stress\", \"Sadness\", \"Happiness\"];\r\n  const exercises = {\r\n    Anger: [\r\n      {\r\n        name: \"Deep Breathing\",\r\n        compliment: \"Great job on practicing deep breathing!\",\r\n        points: [\r\n          \"Take a deep breath in through your nose for 4 seconds.\",\r\n          \"Hold your breath for 4 seconds.\",\r\n          \"Exhale slowly through your mouth for 4 seconds.\",\r\n          \"Repeat the process several times.\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"Count to 10\",\r\n        compliment: \"You're doing great with counting to 10!\",\r\n        points: [\r\n          \"Count slowly from 1 to 10.\",\r\n          \"Focus on your breath as you count.\",\r\n          \"Repeat the process until you feel calmer.\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"Physical Activity\",\r\n        compliment: \"Keep up the good work with physical activity!\",\r\n        points: [\r\n          \"Go for a brisk walk or run.\",\r\n          \"Engage in a workout routine.\",\r\n          \"Practice yoga or tai chi.\",\r\n          \"Play a sport you enjoy.\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"Visualization\",\r\n        compliment: \"You're doing well with visualization!\",\r\n        points: [\r\n          \"Close your eyes and imagine a peaceful scene.\",\r\n          \"Focus on the details, such as sounds, smells, and colors.\",\r\n          \"Take deep breaths as you visualize the scene.\",\r\n          \"Feel yourself becoming more relaxed and calm.\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"Progressive Muscle Relaxation\",\r\n        compliment: \"You're making progress with muscle relaxation!\",\r\n        points: [\r\n          \"Tense and relax each muscle group in your body, starting from your toes and working your way up to your head.\",\r\n          \"Hold each tension for 5-10 seconds, then release and relax for 20-30 seconds.\",\r\n          \"Focus on the sensation of relaxation as you release each muscle group.\",\r\n        ],\r\n      },\r\n    ],\r\n    Anxiety: [\r\n      // Add exercises for Anxiety\r\n    ],\r\n    Stress: [\r\n      // Add exercises for Stress\r\n    ],\r\n    Sadness: [\r\n      // Add exercises for Sadness\r\n    ],\r\n    Happiness: [\r\n      // Add exercises for Happiness\r\n    ],\r\n  };\r\n\r\n  // State to manage selected emotion and exercises\r\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\r\n\r\n  // Function to handle emotion selection\r\n  const handleEmotionSelection = (emotion) => {\r\n    setSelectedEmotion(emotion);\r\n  };\r\n\r\n  // Function to handle exercise selection\r\n  const handleExerciseSelection = (exercise) => {\r\n    // Logic to handle exercise selection\r\n    console.log(`Selected exercise: ${exercise}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar2 />\r\n      <div className=\"exercise-container\">\r\n        <h2>Emotion Control Exercises</h2>\r\n        <div className=\"emotion-list\">\r\n          {/* Render list of emotions */}\r\n          <div className=\"emotion-scroll\">\r\n            {emotions.map((emotion) => (\r\n              <button\r\n                key={emotion}\r\n                onClick={() => handleEmotionSelection(emotion)}\r\n                className={selectedEmotion === emotion ? \"selected\" : \"\"}\r\n              >\r\n                {emotion}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* Display exercises for selected emotion */}\r\n        {selectedEmotion && (\r\n          <div className=\"exercise\">\r\n            <h3>{selectedEmotion}</h3>\r\n            <div className=\"exercise-list\">\r\n              {exercises[selectedEmotion].map((exercise, index) => (\r\n                <div key={index} className=\"exercise-item\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`exercise-${index}`}\r\n                    onChange={() => handleExerciseSelection(exercise.name)}\r\n                  />\r\n                  <label htmlFor={`exercise-${index}`}>{exercise.name}</label>\r\n                  <ul>\r\n                    {exercise.points.map((point, i) => (\r\n                      <li key={i}>{point}</li>\r\n                    ))}\r\n                  </ul>\r\n                  <p>{exercise.compliment}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}